FORMAT: 1A
HOST: https://api.test.paysafe.com/cardpayments/

# Paysafe Card Payments API

>**Note:** To download a French version of this guide in PDF, click [here](http://mweb1-paysafeio-foreign.fra.skrill.net/fileadmin/1.3_Payments_API_fr.pdf)


# Release Notes

| Version   | Date              | Details |
|---        |---                |---      |
| v1        | May 2020          | Added Purchase Return Authorizations support|
| v1        | April 2019        | Added 3D Secure 2 Authentication object fields |
| v1        | April 2018        | Renamed "Turnkey" to "Platforms" |
| v1        | February 2018     | Added *recipient* object |
| v1        | September 2017    | Added Turnkey features |
| v1        | November 2016     | Document release |

# Overview

Connect your application directly with our payment engine to process a full suite of methods that are REST-based – designed to be easy to understand and use. Ultimate control puts you in the driver’s seat.
* Choose an efficient, lightweight, and fast integration method to access our API.
* Implement a wide variety of REST-based API requests – including Purchases, Refunds, and Void  Authorizations.
* Obtain output in JSON format – it’s easy to parse in a large variety of Web and mobile applications.
* Use any language or platform to make requests through standard HTTP protocols.

<a name="apikey" title="Authentication"></a>
# Authentication

In order for you to use the Paysafe REST API, Paysafe must first set you up on their system
and provide you with an API key. Your API key looks something like this:

 * Key Username – MerchantXYZ
 * Key Password – B-tst1-0-51ed39e4-312d02345d3f123120881dff9bb4020a89e8ac44cdfdcecd702151182fdc952272661d290ab2e5849e31bb03deede7e

Note that this is not the same as your Merchant Back Office username and password.

The case-sensitive API key is sent using HTTP Basic Authentication. To use HTTP Basic Authentication, you must send the API key credentials using the Authorization header with every request. The Authorization header is constructed as follows:

 1. The Key Username and Key Password are combined into a string separated by a colon, e.g.,“Key Username:Key Password”.
 2. The resulting string literal is then encoded using Base64.
 3. The authorization method and a space (i.e., “Basic”) are then put before the encoded string.

For example, using the Key Username and Password examples above, the header is formed as follows:

``Authorization: Basic
TWVyY2hhbnRYWVo6Qi10c3QxLTAtNTFlZDM5ZTQtMzEyZDAyMzQ1ZDNmMTIzMTIwODgxZGZmOWJiNDAyMGE4OWU4YWM0NGNkZmRjZWNkNzAyMTUxMTgyZmRjOTU yMjcyNjYxZDI5MGFiMmU1ODQ5ZTMxYmIwM2RlZWRlN2U=``

For additional details, please refer to [http://en.wikipedia.org/wiki/Basic_access_authentication](http://en.wikipedia.org/wiki/Basic_access_authentication).

**Note:** Your Production API key will be different from your Test API key. Contact your account manager for details. You must keep your API keys safe and ensure that it is used appropriately for your needs.

# URLs

##  Test URL
In order to test your integration with Paysafe, use the following Test URL:

`https://api.test.paysafe.com`

For example:

`https://api.test.paysafe.com/cardpayments/v1/accounts/{account_id}`

## Production URL
In order to process live requests with Paysafe, use the following Production URL:

`https://api.paysafe.com`

For example:

`https://api.paysafe.com/cardpayments/v1/accounts/{account_id}`

<a name="pagination" title="Pagination"></a>
# Pagination

In the case where an API GET request returns multiple results, Paysafe returns the first 10 records by default and uses HATEOAS links to provide page navigation. In addition to the default behavior, it is also possible to control the number of results and starting point by passing in query parameters as follows:

|    Name       | Description   |
|---            |---            |
| limit         | This is the total number of records to return. Max = 50. Default = 10. |
| offset        | This is the starting position, where 0 is the first record. Default = 0. |
| startDate     | This is the start date in UTC. Default = 30 days before the *endDate*.|
| endDate       | This is the end date in UTC. Default = current date and time. |

<a name="globalinvalidcharacters" title="Global Invalid Characters"></a>
# Global Invalid Characters

You must not include any of the characters in the following table as values in any of your request parameters except in the [merchantDescriptor](#merchantdescriptorobject) Object. If you do, your request will result in an error.

|    Character    |    HEX    |    Description                     |
|-----------------|-----------|------------------------------------|
| "               | 22        | Double quotes (or speech marks)    |
| ;               | 3B        | Semicolon                          |
| ^               | 5E        | Caret, circumflex                  |
| *               | 2A        | Asterisk                           |
| <               | 3C        | Less than (or open angled bracket) |
| /               | 2F        | Slash or divide                    |
| [               | 5B        | Opening bracket                    |
| ]               | 5D        | Closing bracket                    |
| \               | 5C        | Backslash                          |

# API

The Card Payments API allows merchants to process credit card transactions using the REST protocol. The protocol uses JSON for all requests and responses.

The following request types are supported:

  * [Authorizations](#auths)
  * [Void Authorizations](#voidauths)
  * [Settlements](#settlements)
  * [Refunds](#refunds)
  * [Verifications](#verifications)
  * [Original Credits](#originalcredits)
  * [Standalone Credits](#standalonecredits)
  
**API Endpoint**

`https://api.paysafe.com/cardpayments/v1/accounts/{account_id}`

**Resource Patterns**

|Endpoint URL                                   |Description                            |Action |
|---                                            |---                                    |---    |
|/auths                                         |Submit an Authorization or Purchase    |POST   |
|/auths/{auth_id}                               |Look Up an Authorization               |GET    |
|/auths/{auth_id}                               |Update an Authorization                |PUT    |
|/auths/{auth_id}/voidauths                     |Void (Reverse) an Authorization        |POST   |
|/voidauths/{void_auth_id}                      |Look Up a Void Authorization           |GET    |
|/auths/{auth_id}/settlements                   |Settle an Authorization                |POST   |
|/settlements/{settlement_id}                   |Look Up a Settlement                   |GET    |
|/settlements/{settlement_id}                   |Cancel a Settlement                    |PUT    |
|/settlements/{settlement_id}/refunds           |Submit a Refund                        |POST   |
|/refunds/{refund_id}                           |Look Up a Refund                       |GET    |
|/refunds/{refund_id}                           |Cancel a Refund                        |PUT    |
|/verifications                                 |Verify a Card                          |POST   |
|/verifications/{verification_id}               |Look Up a Verification                 |GET    |
|/originalcredits                               |Submit an Original Credit              |POST   |
|/originalcredits/{original_credit_id}          |Look Up an Original Credit             |GET    |
|/originalcredits/{original_credit_id}          |Cancel an Original Credit              |PUT    |
|/standalonecredits                             |Submit a Standalone Credit             |POST   |
|/standalonecredits/{standalone_credit_id}      |Look Up a Standalone Credit            |GET    |
|/standalonecredits/{standalone_credit_id}      |Cancel a Standalone Credit             |PUT    |

# Getting Started

Click [here for details](https://developer.paysafe.com/en/rest-apis/cards/using-the-api/scenarios/) of some common scenarios for making Card payments.

# Testing Instructions

The Paysafe Test environment can be used to test websites or applications without actually running transactions through the payment processing engine. It is important to make sure that your systems are working correctly before going into a live environment. Click [here for details](https://developer.paysafe.com/en/rest-apis/cards/test-and-go-live/testing-instructions/) about using the Test environment.

<a name="isostandards" title="ISO Standards"></a>
# ISO Standards

<a name="currencycodes" title="Currency Codes"></a>
## Currency Codes

**Note**
 * The table below lists the currencies in which transaction requests are processed, but note that they may be settled in a different currency.
 * Not all currencies are supported by all banks. Contact your account manager for more information about which currencies are supported for your merchant account.

|Currency |Code |
|--- |--- |
|Argentine Peso |ARS |
|Australian Dollar  |AUD |
|Azerbaijanian Manat    |AZN |
|Bahraini Dinar |BHD  |
|Belarusian Ruble   |BYR  |
|Bolivian Boliviano |BOB  |
|Bosnia and Herzegovina Convertible Mark |BAM  |
|Brazilian Real |BRL  |
|Bulgarian Lev  |BGN  |
|Canadian Dollar    |CAD  |
|Chilean Peso   |CLP  |
|China Yuan Renminbi    |CNY  |
|Columbian Peso |COP  |
|Costa Rican Colon  |CRC  |
|Croatian Kuna  |HRK  |
|Czech Koruna   |CZK  |
|Danish Krone   |DKK  |
|Dominican Peso |DOP  |
|East Caribbean Dollar  |XCD  |
|Egyptian Pound |EGP  |
|Ethiopian Birr |ETB  |
|Euro   |EUR  |
|Fiji Dollar    |FJD  |
|Georgian Lari  |GEL  |
|Guatemala Quetzal  |GTQ  |
|Haiti Goude    |HTG  |
|Honduran Lempira   |HNL  |
|Hong Kong Dollar   |HKD  |
|Hungarian Forint   |HUF  |
|Iceland Krona  |ISK  |
|Indian Rupee   |INR  |
|Indonesia Rupiah   |IDR  |
|Iranian Rial   |IRR  |
|Jamaican Dollar    |JMD  |
|Japanese Yen   |JPY  |
|Jordanian Dinar    |JOD  |
|Kazakhstan Tenge   |KZT  |
|Kenyan Shilling    |KES  |
|Korean Won |KRW  |
|Kuwaiti Dinar  |KWD  |
|Latvian Lats   |LVL  |
|Lebanese Pound |LBP  |
|Libyan Dinars  |LYD  |
|Lithuanian Litas   |LTL  |
|Malawi Kwacha  |MWK  |
|Malaysian Ringgit  |MYR  |
|Mauritius Rupee    |MUR  |
|Mexican Peso   |MXN  |
|Moldovan Leu   |MDL  |
|Moroccan Dirham    |MAD  |
|New Israeli Shekel |ILS  |
|New Zealand Dollar |NZD  |
|Nigerian Naira |NGN  |
|Norwegian Krone    |NOK  |
|Omani Rial |OMR  |
|Pakistan Rupee |PKR  |
|Panamanian Balboa  |PAB  |
|Paraguayan Guarani |PYG  |
|Peruvian Sol   |PEN  |
|Philippine Peso    |PHP  |
|Polish Zloty   |PLN  |
|Pound Sterling |GBP  |
|Qatari Rial    |QAR  |
|Romanian New Leu   |RON  |
|Russian Ruble  |RUB  |
|Saudi Arabian Riyal    |SAR  |
|Serbian Dinar  |RSD  |
|Singapore Dollar   |SGD  |
|South African Rand |ZAR  |
|Sri Lanka Rupee    |LKR  |
|Swedish Krona  |SEK  |
|Swiss Franc    |CHF  |
|Syrian Pound   |SYP  |
|Taiwan New Dollar  |TWD  |
|Thai Baht  |THB  |
|Trinidad and Tobago Dollar |TTD  |
|Tunisian Dinar |TND  |
|Turkish Lira   |TRY  |
|Ukranian Hryunia   |UAH  |
|UAE Dirham |AED  |
|Uruguay Peso   |UYU  |
|US Dollar  |USD  |
|Venezuelan Bolivar |VEF  |
|Viet Nam Dong  |VND  |

<a name="provincecodes" title="Province Codes"></a>
## Province Codes

|Province               |Code   |
|---                    |---    |
|Alberta                |AB     |
|British Columbia       |BC     |
|Manitoba               |MB     |
|New Brunswick          |NB     |
|Newfoundland           |NL     |
|Nova Scotia            |NS     |
|Northwest Territories  |NT     |
|Nunavut                |NU     |
|Ontario                |ON     |
|Prince Edward Island   |PE     |
|Quebec                 |QC     |
|Saskatchewan           |SK     |
|Yukon                  |YT     |

<a name="statecodes" title="State Codes"></a>
## State Codes

|State                  |Code   |
|---                    |---    |
|Alabama                |AL     |
|Alaska                 |AK     |
|American Samoa         |AS     |
|Arizona                |AZ     |
|Arkansas               |AR     |
|Armed Forces Americas  |AA     |
|Armed Forces Europe    |AE     |
|Armed Forces Pacific   |AP     |
|California             |CA     |
|Colorado               |CO     |
|Connecticut            |CT     |
|Delaware               |DE     |
|District of Columbia   |DC     |
|Florida                |FL     |
|Georgia                |GA     |
|Guam                   |GU     |
|Hawaii                 |HI     |
|Idaho                  |ID     |
|Illinois               |IL     |
|Indiana                |IN     |
|International          |IT     |
|Iowa                   |IA     |
|Kansas                 |KS     |
|Kentucky               |KY     |
|Louisiana              |LA     |
|Maine                  |ME     |
|Maryland               |MD     |
|Massachusetts          |MA     |
|Michigan               |MI     |
|Minnesota              |MN     |
|Mississippi            |MS     |
|Missouri               |MO     |
|Montana                |MT     |
|Nebraska               |NE     |
|Nevada                 |NV     |
|New Hampshire          |NH     |
|New Jersey             |NJ     |
|New Mexico             |NM     |
|New York               |NY     |
|North Carolina         |NC     |
|North Dakota           |ND     |
|Northern Mariana Is.   |MP     |
|Ohio                   |OH     |
|Oklahoma               |OK     |
|Oregon                 |OR     |
|Palau                  |PW     |
|Pennsylvania           |PA     |
|Puerto Rico            |PR     |
|Rhode Island           |RI     |
|South Carolina         |SC     |
|South Dakota           |SD     |
|Tennessee              |TN     |
|Texas                  |TX     |
|U.S. Virgin Islands    |VI     |
|United States Federal  |US     |
|Utah                   |UT     |
|Vermont                |VT     |
|Virginia               |VA     |
|Washington             |WA     |
|West Virginia          |WV     |
|Wisconsin              |WI     |
|Wyoming                |WY     |

<a name="countrycodes" title="Country Codes"></a>
## Country Codes
| **Country**                       | **Code** |
|---                                |---       |
| Afghanistan                       | AF |
| Åland Islands                     | AX |
| Albania                           | AL |
| Algeria                           | DZ |
| American Samoa                    | AS |
| Andorra                           | AD |
| Angola                            | AO |
| Anguilla                          | AI |
| Antarctica                        | AQ |
| Antigua and Barbuda               | AG |
| Argentina                         | AR |
| Armenia                           | AM |
| Aruba                             | AW |
| Australia                         | AU |
| Austria                           | AT |
| Azerbaijan                        | AZ |
| Bahamas                           | BS |
| Bahrain                           | BH |
| Bangladesh                        | BD |
| Barbados                          | BB |
| Belarus                           | BY |
| Belgium                           | BE |
| Belize                            | BZ |
| Benin                             | BJ |
| Bermuda                           | BM |
| Bhutan                            | BT |
| Bolivia                           | BO |
| Bonaire, Sint Eustatius and Saba  | BQ |
| Bosnia and Herzegovina            | BA |
| Botswana                          | BW |
| Bouvet Island                     | BV |
| Brazil                            | BR |
| British Indian Ocean Territory    | IO |
| Brunei Darussalam                 | BN |
| Bulgaria                          | BG |
| Burkina Faso                      | BF |
| Burundi                           | BI |
| Cambodia                          | KH |
| Cameroon                          | CM |
| Canada                            | CA |
| Cape Verde                        | CV |
| Cayman Islands                    | KY |
| Central African Republic          | CF |
| Chad                              | TD |
| Chile                             | CL |
| China                             | CN |
| Christmas Island                  | CX |
| Cocos (Keeling) Islands           | CC |
| Colombia                          | CO |
| Comoros                           | KM |
| Congo                             | CG |
| Congo, Democratic Republic of     | CD |
| Cook Islands                      | CK |
| Costa Rica                        | CR |
| Côte D’Ivoire                     | CI |
| Croatia                           | HR |
| Cuba                              | CU |
| Curaçao                           | CW |
| Cyprus                            | CY |
| Czech Republic                    | CZ |
| Denmark                           | DK |
| Djibouti                          | DJ |
| Dominica                          | DM |
| Dominican Republic                | DO |
| Ecuador                           | EC |
| Egypt                             | EG |
| El Salvador                       | SV |
| Equatorial Guinea                 | GQ |
| Eritrea                           | ER |
| Estonia                           | EE |
| Ethiopia                          | ET |
| Falkland Islands                  | FK |
| Faroe Islands                     | FO |
| Fiji                              | FJ |
| Finland                           | FI |
| France                            | FR |
| French Guiana                     | GF |
| French Polynesia                  | PF |
| French Southern Territories       | TF |
| Gabon                             | GA |
| Gambia                            | GM |
| Georgia                           | GE |
| Germany                           | DE |
| Ghana                             | GH |
| Gibraltar                         | GI |
| Greece                            | GR |
| Greenland                         | GL |
| Grenada                           | GD |
| Guadeloupe                        | GP |
| Guam                              | GU |
| Guatemala                         | GT |
| Guernsey                          | GG |
| Guinea                            | GN |
| Guinea-Bissau                     | GW |
| Guyana                            | GY |
| Haiti                             | HT |
| Heard and McDonald Islands        | HM |
| Honduras                          | HN |
| Hong Kong                         | HK |
| Hungary                           | HU |
| Iceland                           | IS |
| India                             | IN |
| Indonesia                         | ID |
| Iran  (Islamic Republic of)       | IR |
| Iraq                              | IQ |
| Ireland                           | IE |
| Isle of Man                       | IM |
| Israel                            | IL |
| Italy                             | IT |
| Jamaica                           | JM |
| Japan                             | JP |
| Jersey                            | JE |
| Jordan                            | JO |
| Kazakhstan                        | KZ |
| Kenya                             | KE |
| Kiribati                          | KI |
| Korea, Democratic People’s Republic | KP |
| Korea, Republic of                | KR |
| Kuwait                            | KW |
| Kyrgyzstan                        | KG |
| Lao People’s Democratic Republic  | LA |
| Latvia                            | LV |
| Lebanon                           | LB |
| Lesotho                           | LS |
| Liberia                           | LR |
| Libyan Arab Jamahiriya            | LY |
| Liechtenstein                     | LI |
| Lithuania                         | LT |
| Luxembourg                        | LU |
| Macau                             | MO |
| Macedonia                         | MK |
| Madagascar                        | MG |
| Malawi                            | MW |
| Malaysia                          | MY |
| Maldives                          | MV |
| Mali                              | ML |
| Malta                             | MT |
| Marshall Islands                  | MH |
| Martinique                        | MQ |
| Mauritania                        | MR |
| Mauritius                         | MU |
| Mayotte                           | YT |
| Mexico                            | MX |
| Micronesia, Federated States of   | FM |
| Moldova, Republic of              | MD |
| Monaco                            | MC |
| Mongolia                          | MN |
| Montenegro                        | ME |
| Montserrat                        | MS |
| Morocco                           | MA |
| Mozambique                        | MZ |
| Myanmar                           | MM |
| Namibia                           | NA |
| Nauru                             | NR |
| Nepal                             | NP |
| New Caledonia                     | NC |
| New Zealand                       | NZ |
| Nicaragua                         | NI |
| Niger                             | NE |
| Nigeria                           | NG |
| Niue                              | NU |
| Norfolk Island                    | NF |
| Northern Mariana Islands          | MP |
| Norway                            | NO |
| Oman                              | OM |
| Pakistan                          | PK |
| Palau                             | PW |
| Palestinian Territory, Occupied   | PS |
| Panama                            | PA |
| Papua New Guinea                  | PG |
| Paraguay                          | PY |
| Peru                              | PE |
| Philippines                       | PH |
| Pitcairn                          | PN |
| Poland                            | PL |
| Portugal                          | PT |
| Puerto Rico                       | PR |
| Qatar                             | QA |
| Reunion                           | RE |
| Romania                           | RO |
| Russian Federation                | RU |
| Rwanda                            | RW |
| Saint Barthélemy                  | BL |
| Saint Helena                      | SH |
| Saint Kitts and Nevis             | KN |
| Saint Lucia                       | LC |
| Saint Martin                      | MF |
| Saint Vincent and the Grenadines  | VC |
| Samoa                             | WS |
| San Marino                        | SM |
| Sao Tome and Principe             | ST |
| Saudi Arabia                      | SA |
| Senegal                           | SN |
| Serbia                            | RS |
| Seychelles                        | SC |
| Sierra Leone                      | SL |
| Singapore                         | SG |
| Sint Maarten                      | SX |
| Slovakia (Slovak Republic)        | SK |
| Slovenia                          | SI |
| Solomon Islands                   | SB |
| Somalia                           | SO |
| South Africa                      | ZA |
| South Georgia and the South Sandwich Islands | GS |
| South Sudan                       | SS |
| Spain                             | ES |
| Sri Lanka                         | LK |
| St. Pierre and Miquelon           | PM |
| Sudan                             | SD |
| Suriname                          | SR |
| Svalbard and Jan Mayen Islands    | SJ |
| Swaziland                         | SZ |
| Sweden                            | SE |
| Switzerland                       | CH |
| Syrian Arab Republic              | SY |
| Taiwan                            | TW |
| Tajikistan                        | TJ |
| Tanzania, United Republic of      | TZ |
| Thailand                          | TH |
| The Netherlands                   | NL |
| Timor-Leste                       | TL |
| Togo                              | TG |
| Tokelau                           | TK |
| Tonga                             | TO |
| Trinidad and Tobago               | TT |
| Tunisia                           | TN |
| Turkey                            | TR |
| Turkmenistan                      | TM |
| Turks and Caicos Islands          | TC |
| Tuvalu                            | TV |
| Uganda                            | UG |
| Ukraine                           | UA |
| United Arab Emirates              | AE |
| United Kingdom                    | GB |
| United States                     | US |
| United States Minor Outlying Islands | UM |
| Uruguay                           | UY |
| Uzbekistan                        | UZ |
| Vanuatu                           | VU |
| Vatican City State (Holy See)     | VA |
| Venezuela                         | VE |
| Vietnam                           | VN |
| Virgin Islands (British)          | VG |
| Virgin Islands (U.S.)             | VI |
| Wallis and Futuna Islands         | WF |
| Western Sahara                    | EH |
| Yemen                             | YE |
| Zambia                            | ZM |
| Zimbabwe                          | ZW |

# Complex JSON Objects

<a name="accorddobject" title="AccordD Object"></a>
## accordD
|Element            |Type                       |Description                        |
|---                |---                        |---       |
|financingType      |enum                       |This is the type of financing offered.<ul><li>DEFERRED_PAYMENT &ndash; Deferred payment financing</li><li>EQUAL_PAYMENT &ndash; Equal payment financing</li></ul>|
|plan               |string<br/>`length<=3`     |This is the plan number for this financing transaction.|
|gracePeriod        |number<br/>`max=99`        |This is the grace period, in months, associated with deferred payment transactions.|
|term               |number<br/>`max=99`        |This is the number of payments, in months, for equal payment transactions.|

```apib
    {
    "accordD":{
        "financingType":"DEFERRED_PAYMENT",
        "plan":"123",
        "gracePeriod":"12"
    }
    }
```

<a name="acquirerdataobject" title="Acquirer Data Object"></a>
## acquirerData

This is additional information about the card acquirer required when you are performing an Original Credit request. This object is required **only when** you are using Credorax (CRX) as your acquirer for Original Credits. Contact your account manager for details.

|Element            |Type                       |Required       |Description                        |
|---                |---                        |---            |---       |
|authId             |string<br/>`length<=36`    |Yes            |This is the ID returned in the response to a previous successful Authorization or Settlement request.|
|code               |string</br>`length<=10`    |Yes            |This is the code for your card acquirer.|

```apib
    {
    "acquirerData":{
        "authId":"f06bccd6-de90-4b73-b10f-30266763bc60",
        "code":"CRX"
    }
    }
```

<a name="acquirerresponseobject" title="Acquirer Response Object"></a>
## acquirerResponse

These are raw results returned by the acquirer.

**Generic**

|Element            |Type       |Description                                                    |
|---                |---        |---                                                        |
|code               |string     |This is acquirer identification code, such as DJN, CRX, etc.|
|responseCode       |string     |This is the raw response returned by the acquirer.         |
|avsCode            |string     |This is the raw AVS code returned by the acquirer.     |
|balanceResponse    |string     |This is the balance remaining on a gift card, if a gift card was used for the original transaction.|

**Desjardins (DJN)**

|Element            |Type       |Description                        |
|---                |---        |---            |
|batchNumber        |string     |This is the batch number.|
|effectiveDate      |string     |This is the date of the bank deposit associated with the transaction.|
|financingType      |enum       |This is the type of financing offered.|
|gracePeriod        |string     |This is the grace period, in months, associated with deferred payment transactions.|
|nonReusableToken   |string     |This is a credit card ID used by the merchant to track consumer behavior.|
|plan               |string     |This is the plan number for this financing transaction.|
|seqNumber          |string     |This is the merchant's sequence number.|
|term               |string     |This is the number of payments, in months, for equal payment transactions.|
|terminalId         |string     |This is the merchant's terminal ID.|

**Credorax (CRX)**

|Element            |Type       |Description        |
|---                |---        |---        |
|responseId         |string     |This is the response ID assigned by Credorax. |
|requestId          |string     |This is the request ID assigned by Paysafe. |
|description        |string     |This is a description of the response. |
|authCode           |string     |This is the authorization code.  |
|txnDateTime        |string     |This is the transaction date and time. |
|referenceNbr       |string     |Bank net transaction Id/Merch Tran Ref |
|responseReasonCode |string     |This is the raw response reason code returned by Credorax.|
|cvv2Result         |string     |This is the raw cvv2 result code. |

**NETBANX Acquirer Gateway (NAG)**

|Element            |Type       |Description        |
|---                |---        |---        |
|mid                |string     |This is the acquirer MID that was sent to the clearing house.|

```apib
  {
  "acquirerResponses":{
    "code":"CRX",
    "responseCode":"0",
    "avsCode":"M",
    "responseId":"625996",
    "requestId":"2263",
    "referenceNbr":"315312161910",
    "description":"Transaction has been executed successfully",
    "authCode":"026189",
    "txnDateTime":"11/11/2013 at 12:16:19 EST",
    "responseReasonCode":"00",
    "cvv2Result":"M"
  }
  }
```
<a name="airlineTravelDetailsobject" title="Airline Travel Details Object"></a>
## airlineTravelDetails

**Note** This object is specific to Airline Merchants Only.

|Element                            |Type                           |Description                        |
|---                                |---                            |---                                |
|passengerName                      |string<br/>`min=1 max=20`      |Name of the passenger to whom the ticket was issued.|
|departureDate                      |date <br/>`UTC date format`    |Date of passenger’s departure. Date format = YYYY-MM-DD, ISO 8601 expected. For example, 2014-01-26|
|origin                             |string<br/>`min=3 max=3`       |Departure Airport Code (IATA Airport Code).Example “YUL”|
|computerizedReservationSystem      |enum                           |Indicates the computerized reservation system used to make the reservation and purchase the ticket. Possible values for tickets purchased in Germany are:<ul><li>STRT - Start</li><li>PARS - TWA</li><li>DATS - Delta</li><li>SABR - Sabre</li><li>DALA - Covia-Apollo</li><li>BLAN - Dr. Blank</li><li>DERD - DER</li><li>TUID - TUI</li></ul>|
|[ticket](#ticket)                  |object                         |Information about the Airline Ticket Number and if the ticket is restricted.|
|customerReferenceNumber            |string<br/>`min=1 max=20`      |Contains the code that the cardholder supplied to the card acceptor.|
|[travelAgency](#travelAgency)      |object                         |Information about the travel agency if the ticket was issued by a travel agency.|
|[tripLegs](#tripLegs)              |object                         |A grouping of up to four trip legs. Each leg provides detailed itinerary data. |

```apib
    "airlineTravelDetails": {
    "passengerName": "Joe Smith",
    "departureDate": "2021-01-26",
    "origin": "SXF",
    "computerizedReservationSystem": "DATS",
    "ticket": {
        "ticketNumber": 1234567891011,
        "isRestrictedTicket": false
    },
    "customerReferenceNumber": 10987654321,
    "travelAgency": {
      "name": "MY AGENT",
      "code": "MYAGENT347"
    },
    "tripLegs": {
      "leg1": {
        "flight": {
          "carrierCode": "LH",
          "flightNumber": "0799"
        },
        "serviceClass": "F",
        "isStopOverAllowed": "true",
        "destination": "ISL",
        "fareBasis": "VMAY",
        "departureDate": "2021-01-26"
      },
      "leg2": {
        "flight": {
          "carrierCode": "TK",
          "flightNumber": "1385"
        },
        "serviceClass": "F",
        "isStopOverAllowed": "true",
        "destination": "SOF",
        "fareBasis": "VMAY",
        "departureDate": "2021-01-26"
      }
    }
  } 
```

<a name="authenticationobject" title="Authentication Object"></a>
## authentication

|Element                            |Type                           |Description                        |
|---                                |---                            |---                                |
|eci                                |number<br/>`length<=2`         |This is the Electronic Commerce Indicator code, which gets returned by the card issuer indicating whether the cardholder was successfully authenticated. Note that in some cases the *eci* value includes a leading zero, e.g., 01 or 02.<br/>**Visa**<ul><li>5 &ndash; Identifies a successfully authenticated transaction.</li><li>6 &ndash; Identifies an attempted authenticated transaction.</li><li>7 &ndash; Identifies a non-authenticated transaction.</li></ul><br/>**Mastercard**<ul><li>0 &ndash; Identifies a non-authenticated transaction.</li><li>1 &ndash; Identifies a non-authenticated transaction.</li><li>2 &ndash; Identifies a successfully authenticated transaction.</li></ul>|
|cavv                               |string<br/>`length<=80`        |This is the Cardholder Authentication Verification Value, which gets returned by the card issuer, indicating that the transaction has been authenticated. This value should be appended to the Authorization request signifying that the transaction has been successfully authenticated.| 
|xid                                |string<br/>`length<=40`        |This is the transaction identifier returned by the card issuer. <br/>**Note:** This exists only for 3DS 1.0.2.|
|threeDEnrollment                   |enum                           |This indicates whether or not the cardholder is enrolled in 3D Secure.<ul><li>Y &ndash; Authentication is available</li><li>N &ndash; Cardholder is not enrolled</li><li>U &ndash; Authentication is unavailable</li></ul><br/>**Note:** This exists only for 3DS 1.0.2.|
|threeDResult                       |enum                           |This indicates the outcome of the authentication.<ul><li>Y &ndash; The cardholder successfully authenticated with their card issuer.</li><li>A &ndash; The cardholder authentication was attempted.</li><li>N &ndash; The cardholder failed to authenticate with their card issuer.</li><li>U &ndash; Authentication with the card issuer was unavailable.</li><li>E &ndash; An error occurred during authentication.</li><li>R &ndash; Rejected transaction.</li></ul><br/>**Note:** The _R_ value exists only for 3D Secure 2.|
|signatureStatus                    |enum                           |This is the 3D Secure signature verification result value.<ul><li>Y &ndash; All transaction and signature checks satisfied.</li><li>N &ndash; At least one transaction or signature check failed.</li></ul><br/>**Note:** This exists only for 3DS 1.0.2.|
|directoryServerTransactionId       |string<br/>`length<=36`        |This is the unique directory server transaction ID required for Mastercard. <br/>**Note:** This exists only for 3D Secure 2. |
|threeDSecureVersion                |string<br/>`min=5 max=8`       |This is the 3D secure protocol version. <br/>**Note:** Paysafe strongly recommends including the correct 3D Secure version, exactly as it is returned from the 3D Secure API. If no version is specified in the request, the value defaults to 1.0.2. and is echoed in the response. |

The following is an example of the 3DS 1.0.2 authentication object:
```apib
    {
        "authentication": {
            "eci": 5,
            "cavv": "AAABCIEjYgAAAAAAlCNiENiWiV+=",
            "xid": "OU9rcTRCY1VJTFlDWTFESXFtTHU=",
            "threeDEnrollment": "Y",
            "threeDResult": "Y",
            "threeDSecureVersion": "1.0.2",
            "signatureStatus": "Y"
        }
    }
```

The following is an example of the 3D Secure 2 authentication object:
```apib
    {
        "authentication": {
            "eci": 5,
            "cavv": "AAABCIEjYgAAAAAAlCNiENiWiV+=",
            "threeDResult": "Y",
            "threeDSecureVersion": "2.1.0",
            "directoryServerTransactionId": "a3a721f3-b6fa-4cb5-84ea-c7b5c39890a2"
        }
    }
```

<a name="authorizationobject" title="auths Object"></a>
## auths

|Element            |Type                                   |Description                        |
|---                |---                                    |---                                |
|id                 |string <br/>`length<=36`               |This is the ID returned in the response. This ID can be used for future associated requests.|
|merchantRefNum     |string <br/>`length<=255`              |This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.|
|amount             |number<br/>`max=99999999999`           |This is the amount of the request, in minor units. For example, to process US $10.99, this value should be 1099. To process 1000 Japanese yen, this value should be 1000. To process 10.139 Tunisian dinar, this value should be 10139.<br/>**Note:** If the merchant account is set up for a currency that has 3 decimal units, our system will half round up the least significant digit. Therefore, a transaction of 10.139 Tunisian dinar would be processed as 10.14.|
|settleWithAuth     |boolean                                |This indicates whether the request is an Authorization only (no Settlement), or a Purchase (Authorization and Settlement).<br/><ul><li>false &ndash; The request is not settled</li><li>true &ndash; The request is settled</li></ul><br/>**Note:** If the merchant wants to find out whether an Authorization has been settled, they should check the *availableToSettle* element. If the amount is 0, the Authorization has been fully settled.|
|availableToSettle  |number                                 |This is the amount of of the Authorization remaining to settle, in minor units.|
|childAccountNum    |string<br/>`length<=10`                |This is the child merchant account number. It is returned only if the transaction was processed via a master account.|
|card               |[card](#cardobject)                    |These are the details of the card used.|
|authentication     |[authentication](#authenticationobject)|These are 3D Secure details.|
|authCode           |string<br/>`length<=50`                |This is the Authorization code assigned by the issuing bank and returned in the response.|
|profile            |[profile](#profileobject)              |These are some details about the customer.|
|billingDetails     |[billingDetails](#billingdetailsobject)|These are the billing details for the request.|
|shippingDetails    |[shippingDetails](#shippingdetailsobject) |These are the shipping details for the request.|
|recurring          |enum                                   |This indicates whether this is an initial or repeat transaction for a customer for whom you will be processing recurring transactions. The Recurring Indicator is used to identify transactions that are eligible for repeat processing. The merchant should identity the initial transaction processed with full billing information including the card security code (CVV) by setting the recurring indicator to “INITIAL”. Subsequent charges to the same card can be identified with the recurring indicator set to “RECURRING”. For these transactions the card security code is not required and could not be passed in because card regulations do not allow merchants to store it.<ul><li>INITIAL</li><li>RECURRING</li></ul><br/>**Note:** Not all processing gateways support this parameter. Contact your account manager for more information. You cannot include both the *recurring* parameter and the *storedCredential* object in the same authorization request. Paysafe recommends using the *storedCredential* object.|
|storedCredential   |[storedCredential](#storedcredentialobject) |This object is used to identify requests that use stored credentials that the merchant has on file for the consumer, in order to improve authorization rates and reduce fraud.<br/>**Note:** You cannot include both the *recurring* parameter and the *storedCredential* object in the same authorization request. Paysafe recommends using the *storedCredential* object.|
|customerIp         |string<br/>`length<=39`                |This is the customer's IP address.|
|dupCheck           |boolean                                |This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request within the past 90 days.<br/>**Note:** This value defaults to *true*.|
|keywords           |array<br/>`length<=255`                |This value can be any text the merchant wants to use, e.g., the merchant could use this as a tag to identify the transaction or the product purchased at their site. You can search on keywords in the merchant back office reporting tools.<br/>**Note:** The maximum number of keywords allowed in a request is 10.|
|merchantDescriptor |[merchantDescriptor](#merchantdescriptorobject) |This is the merchant descriptor that will be displayed on the customer's card statement.<br/>**Note:** If you are a Consumer Bill Payment Service merchant, then provide your name and biller`s name, separated with asterisk. For example: CBPS Name*Biller Name.|
|accordD            |[accordD](#accorddobject)              |These are parameters for financing plans supported for certain merchant configurations.<br/>Include this element **only when** instructed to do so by your account manager.|
|description        |string<br/>`length<=255`               |This is a description of the transaction, provided by the merchant.|
|txnTime            |UTC formatted date                     |This is the date and time the request was processed. For example:<br/>2014-01-26T10:32:28Z|
|currencyCode       |string<br/>`length=3`                  |This is the currency of the merchant account, e.g., USD or CAD, returned in the request response. See [Currency Codes](#currencycodes)|
|avsResponse        |enum                                   |This is the AVS response from the card issuer. Possible values are: <ul><li>MATCH  </li><li>MATCH_ADDRESS_ONLY</li><li>MATCH_ZIP_ONLY</li><li>NO_MATCH</li><li>NOT_PROCESSED</li><li>UNKNOWN</li></ul>|
|cvvVerification    |enum                                   |This is the response to the *cvv* submitted with the transaction request. Possible values are:<ul><li>MATCH </li><li>NO_MATCH</li><li>NOT_PROCESSED</li><li>UNKNOWN</li></ul>|
|error              |[error](#errorobject)                  |       |
|status             |enum                                   |This is the status of the transaction request. Possible values are:<ul><li>RECEIVED &ndash; Our system has received the request and is waiting for the downstream processor’s response.</li><li>COMPLETED &ndash; The transaction has been completed.</li><li>HELD &ndash; The transaction has been placed on hold due to risk considerations.</li><li>FAILED &ndash; The transaction failed, due to either an error or being declined.</li><li>CANCELLED &ndash; The request has been fully voided (reversed).</li></ul>|
|riskReasonCode     |array                                  |An array of integers is returned, displaying the detailed Risk reason codes if your transaction was declined. It is returned only if your account is configured accordingly.|
|acquirerResponse   |[acquirerResponse](#acquirerresponseobject) |This is the raw response returned by an acquirer. It is returned only if your account is configured accordingly.|
|recipient          |[recipient](#recipientobject)          |In certain cases, this allows additional data to be included with a payment request. |
|level2level3       |[level2level3](#level2level3object)    |This allows merchants who are enabled to provide additional L2/L3 transaction data.<br/>**Note:** Not all processing gateways support this parameter. Contact your account manager for more information.|
|splitpay           |[splitpay](#splitpayobject)            |This enables you to use the Split Payouts functionality when authorizing with a Settlement.|
|entryMode          |enum                                   |This is how the transaction has been initiated and will affect the way it will be processed. Possible values are:<ul><li>- MOTO - Mail Order/Telephone Order</li><li>- CARD_PRESENT - Card Present</li></ul><br/>**Note:**: Include this element only when instructed to do so by Paysafe.| 

```apib
{
  "id":"a02e52c7-c991-4418-966a-b62989cb0eae",
  "merchantRefNum":"ORDER_ID:1231",
  "amount":10098,
  "settleWithAuth":true,
  "availableToSettle":0,
  "card":{
    "type":"VI",
    "lastDigits":"1111",
    "cardExpiry":{
      "month":2,
      "year":2019
    }
  },
  "billingDetails":{
    "zip":"M5H 2N2"
  },
  "authCode":"1234567890",
  "txnTime":"2013-12-14T15:12:18Z",
  "currencyCode":"USD",
  "avsResponse":"NOT_PROCESSED",
  "cvvVerification":"MATCH",
  "status":"COMPLETED",
  "storedCredential": {
    "type": "RECURRING",
    "occurrence": "SUBSEQUENT"
  },
  "keywords": [
    "Repeat Customer",
    "Profile Stored"
  ],
  "settlements": [
    {
      "id":"a02e52c7-c991-4418-966a-b62989cb0eae",
      "merchantRefNum":"ORDER_ID:1231",
      "amount":10098,
      "availableToRefund":0,
      "txnTime":"2013-12-14T15:12:18Z",
      "status":"PENDING"
    }
  ]
}    
```


<a name="billingdetailsobject" title="billingDetails Object"></a>
## billingDetails
|Element            |Type                             |Description                        |
|---                |---                              |---                                |
|street             |string<br/>`length<=50`          |This is the first line of the street address in the billing address.|
|street2            |string<br/>`length<=50`          |This is the second line of the street address in the billing address, if required (e.g., apartment number).|
|city               |string<br/>`length<=40`          |This is the city in the billing address.|
|state              |string<br/>`length<=40`          |See [Province Codes](#provincecodes) or [State Codes](#statecodes) for Canada or the United States.|
|country            |enum  <br/>`length=2`            |See [Country Codes](#countrycodes).|
|zip                |string<br/>`length<=10`          |This is the postal/zip code in the billing address.|
|phone              |string<br/>`length<=40`          |This is the customer's telephone number.|

```apib
  {
  "billingDetails":{
    "street":"100 Queen Street West",
    "city":"Toronto",
    "state":"ON",
    "country":"CA",
    "zip":"M5H 2N2"
  }
  }
```

<a name="cardobject" title="card Object"></a>
## card

When providing card information, merchants can provide either card details or a payment token for a customer already created in the system.

|Element            |Type                       |Description                        |
|---                |---                        |---                                |
|paymentToken       |string <br/>`length<=80`   |If the payment token is provided, no other card information is necessary. |
|cvv                |string<br/>`length=3-4`    |This is the 3- or 4-digit security code that appears on the card following the card number.|

**OR**

|Element            |Type                       |Description                        |
|---                |---                        |---                                |
|cardNum            |string <br/>`length=8-20`  |This is the card number used for the request. |
|type               |enum                       |This is the type of card used for the request, returned in the response. Possible values are:<br/><ul><li>AM &ndash; American Express</li><li>DI &ndash; Discover</li><li>JC &ndash; JCB</li><li>MC &ndash; Mastercard</li><li>MD &ndash; Maestro</li><li>SO &ndash; Solo</li><li>VI &ndash; Visa</li><li>VD &ndash; Visa Debit</li><li>VE &ndash; Visa Electron</li></ul>
|lastDigits         |string<br/>`length=4`      |This is the last four digits of the card used for the request.|
|cardExpiry         |[cardExpiry](#cardexpiryobject)|This is the card's expiry date.|
|cvv                |string<br/>`length=3-4`    |This is the 3- or 4-digit security code that appears on the card following the card number.|
|track1             |string                     |This is Track 1 information read from the card's magnetic stripe.|
|track2             |string                     |This is Track 2 information read from the card's magnetic stripe.|

```apib
    {
    "card": {
        "cardNum": "4111111111111111",
        "cardExpiry": {
            "month": 2,
            "year": 2019
        }
    }
    }
```

<a name="cardexpiryobject" title="cardExpiry Object"></a>
## cardExpiry

|Element                 |Type                   |Description|
|---                     |---                    |---|
|month                   |number<br/>`length=2`  |This is the card expiry month. |
|year                    |number<br/>`length=4`  |This is the card expiry year.|

```apib
    {
    "cardExpiry":{
        "month": "12",
        "year": "2020"
    }
    }
```

<a name="dateofbirthobject" title="dateOfBirth Object"></a>
## dateOfBirth

|Element                 |Type                   |Description|
|---                     |---                    |---|
|day                     |number<br/>`length=2`  |This is the day of the recipient's date of birth. |
|month                   |number<br/>`length=2`  |This is the month of the recipient's date of birth. |
|year                    |number<br/>`length=4`  |This is the year of the recipient's date of birth.|

```apib
    {
    "dateOfBirth":{
        "day":"29",
        "month": "12",
        "year": "1989"
    }
    }
```

<a name="errorobject" title="error Object"></a>
## error
|Element            |Type       |Description                        |
|---                |---        |---                                |
|code               |string     |The error code. Also shown in the X-Application-Status-Code response header.            |
|message            |string     |A description of the error.                 |
|details            |string array     |Details of any parameter value errors (optional).       |
|links              |link array     |One or more rel/href pairs, where rel is "errorinfo", and href is the Developer Center URL containing a description of the error.|

```apib
   {
   "error":{  
      "code":"5270",
      "message":"The credentials provided with the request do not have permission to access the data requested.",
      "details":[  
         "access to {stpAccount:1001076700} denied"
      ],
      "links":[  
         {  
            "rel":"errorinfo",
            "href":"https://developer.paysafe.com/en/rest-apis/cards/test-and-go-live/card-errors/#ErrorCode5270"
         }
      ]
   }
   }
```

<a name="flight" title="flight Object"></a>
## flight

**Note** This object is only for Airline Merchants

|Element            |Type                      |Description                        |
|---                |---                       |---                                |
|carrierCode|string<br/>`min=2 max=2`|Operating Carrier Code; the standard abbreviation code indicating name of the operating carrier (United Airlines, Jet Blue, etc.).|
|flightNumber|string<br/>`min=1 max=5`|Number of the airline flight to be taken on Leg of the trip (excluding the carrier code).|

<a name="leg" title="leg Object"></a>
## leg

**Note** This object is only for Airline Merchants

|Element            |Type                      |Description                        |
|---                |---                       |---                                |
|[flight](#flights) |object                    |Operating Carrier Code and the Number of the airline flight to be taken on Leg of the trip (excluding the carrier code).|
|serviceClass       |string<br/>`min=1 max=1`  |Indicates service class (first class, business class, etc.). Example values (not limited to):<ul><li>F - first class</li><li>J - business class</li><li>W - premium economy class</li><li>Y - economy class</li></ul>|
|isStopOverAllowed  |boolean                   |Indicates whether a stopover is allowed on this ticket. Valid values are: <ul><li>false - not allowed</li><li>true - allowed</li></ul>|
|destination        |string<br/>`min=3 max=3`  |Destination Airport Code (IATA Airport Code).Example “YUL”|   
|fareBasis          |string<br/>`min=1 max=6`  |Contains a Fare Basis Code for Leg that carriers assign to a particular ticket type, such as business class or discounted/nonrefundable.|
|departureDate      |date<br/>`UTC date format`|Date of passenger’s departure for this leg. Date format = YYYY-MM-DD, ISO 8601 expected. For example, 2014-01-26|

```apib
{
    "leg": {
        "flight": {
          "carrierCode": "TK",
          "flightNumber": "1385"
        },
        "serviceClass": "F",
        "isStopOverAllowed": "true",
        "destination": "SOF",
        "fareBasis": "VMAY",
        "departureDate": "2021-01-26"
      }
}
```

<a name="level2level3object" title="level2level3 Object"></a>
## level2level3

Level 2 and Level 3 (L2/L3) credit card processing refers to certain B2B card transactions for which the merchant might be eligible for lower credit card interchange rates. The lower rates may be available for 
merchants who provide more detailed information when processing card-not-present transactions. In order to be eligible for L2/L3 transactions:
 * Your merchant account must be properly configured by Paysafe.
 * The BIN of the credit card used for the transaction must be eligible – typically, these are government-issued credit cards.


|Element                |Type                               | Description|
|---                    |---                                |---            |
| exemptLocalTax        |boolean                            | This indicates whether or not local tax is exempted for the request. If set to true, then the localTaxAmount parameter will be ignored.<br/>**Note:** This value defaults to *false*. |
| localTaxAmount        |integer<br/>`length<=99999999999`  | This is the local sales tax applied to the purchase.|
| nationalTaxAmount     |number<br/>`length<=99999999999`   | This is the national tax included in the transaction amount. |
| freightAmount         |number<br/>`length<=99999999999`   | This is the freight or shipping portion of the total transaction amount. |
| dutyAmount            |number<br/>`length<=99999999999`   | This is the duty associated with the import of the purchased goods. |
| destinationZip        |number<br/>`length<=10`            | This is the postal/zip code of the address to which the purchased goods will be delivered. This field can be identical to the shipFromZip if the customer is present and takes immediate possession of the goods. |
| destinationCountry    |number<br/>`length=2`              | This is the country to which the goods are being shipped. See [Country Codes](#countrycodes). |
| shipFromZip           |number<br/>`length<=10`            | This is the postal/zip code of the address from which the purchased goods are being shipped. |
| lineItems             |[lineItems](#lineitemsobject)      | This is more detailed information about the items that are being purchased.| 

```apib
    {
    "level2Level3": {
        "localTaxAmount": 15000,
        "nationalTaxAmount": 0,
        "freightAmount": 0,
        "dutyAmount": 0,
        "destinationZip": "90210",
        "destinationCountry": "US",
        "shipFromZip": "90210",
        "lineItems": [
            {
                "description": "Disney Cruise Line - Adult",
                "productCode": "DCL-A",
                "quantity": 2,
                "unitAmount": 120000,
                "taxRate": 5,
                "taxAmount": 12000,
                "totalAmount": 252000
            },
            {
                "description": "Disney Cruise Line - Kids",
                "productCode": "DCL-K",
                "quantity": 1,
                "unitAmount": 60000,
                "taxRate": 5,
                "taxAmount": 3000,
                "totalAmount": 63000
            }
        ]
    }
    }
```

<a name="lineitemsobject" title="lineItems Object"></a>
##lineItems

|Element                |Type                               | Description|
|---                    |---                                |---            |
|description            |string<br/>`length<=50`            |This is a description of the item(s) being purchased.|
|productCode            |string<br/>`length<=12`            |This is a merchant-defined description code of the item being purchased.|
|quantity               |number<br/>`length<=99999999999`<br/>`max 4 decimals` |This is the quantity of the item.|
|unitAmount             |number<br/>`length<=99999999999`   |This is the unit price of the item being purchased, in minor units. The currency will be based on the account setting.|
|taxRate                |number<br/>`length<=100`<br/>`max 2 decimals`    |This is the tax rate used to calculate the tax amount. For example, if the tax rate is 10.5%, this value should be 10.5.|
|taxAmount              |number<br/>`length<=99999999999`   |This is the amount of any value-added taxes that can be associated with the purchased item, in minor units. The currency will be based on the account setting. **Note:** Our system will not validate the accuracy of this value. The merchant's application must calculate this value correctly.|
|totalAmount            |number<br/>`length<=99999999999`   |This is the total amount of the line item, typically calculated as price multiplied by quantity, in minor units. The currency will be based on the account setting. **Note:** Our system will not validate the accuracy of this value. The merchant's application must calculate this value correctly.|

```apib
    {
    "lineItems": {
        "description": "Disney Cruise Line",
        "productCode": "DCL",
        "quantity": 4,
        "unitAmount": 120000,
        "taxRate": 5,
        "taxAmount": 24000,
        "totalAmount": 504000
    }
    }
```

<a name="linksobject" title="links Object"></a>
## links

|Element    |Type          |Description|
|---        |---           |---|
|rel        |string        |This is the link type that allows different endpoints to be targeted depending on the end state of the transaction.|
|href       |string        |This is the URI of the resource.|

```apib
    {
    "links": [
        {
        "rel": "self",
        "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/99000/settlements/00ec4b4f-f601-4430-8fb6-f90271cf9291"
        }
        ]
        }
```

<a name="merchantdescriptorobject" title="merchantDescriptor Object"></a>
## merchantDescriptor
|Element            |Type                       |Description                        |
|---                |---                        |---                                |
|dynamicDescriptor  |string <br/>`length<=20`   |This is a merchant descriptor that will be displayed on a customer’s card statement.|
|phone              |string <br/>`length<=13`   |This is the merchant’s phone number, which will be appended to the merchant descriptor on a customer’s card statement.|

```apib
    {
    "merchantDescriptor":{
        "dynamicDescriptor":"OnlineStore",
        "phone":"12345678"
  }
  }
```

<a name="originalcreditsobject" title="originalcredits Object"></a>
## originalcredits

|Element            |Type                                   |Description                        |
|---                |---                                    |---                                |
|id                 |string <br/>`length<=36`               |This is the ID returned in the response. This ID can be used for future associated requests.|
|merchantRefNum     |string <br/>`length<=255`              |This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.|
|amount             |number<br/>`max=99999999999`           |This is the amount of the request, in minor units. For example, to process US $10.99, this value should be 1099. To process 1000 Japanese yen, this value should be 1000. To process 10.139 Tunisian dinar, this value should be 10139.<br/>**Note:** If the merchant account is set up for a currency that has 3 decimal units, our system will half round up the least significant digit.|
|childAccountNum    |string<br/>`length<=10`                |This is the child merchant account number. It is returned only if the transaction was processed via a master account.|
|card               |[card](#cardobject)                    |These are the details of the card used.|
|authCode           |string<br/>`length<=50`                |This is the Authorization code assigned by the issuing bank and returned in the response.|
|profile            |[profile](#profileobject)              |These are some details about the customer.|
|billingDetails     |[billingDetails](#billingdetailsobject)|These are the billing details for the request.|
|customerIp         |string<br/>`length<=39`                |This is the customer's IP address.|
|dupCheck           |boolean                                |This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request within the past 90 days.<br/>**Note:** This value defaults to *true*.|
|description        |string<br/>`length<=255`               |This is a description of the transaction, provided by the merchant.|
|txnTime            |UTC formatted date                     |This is the date and time the request was processed. For example:<br/>2014-01-26T10:32:28Z|
|currencyCode       |string<br/>`length=3`                  |This is the currency of the merchant account, e.g., USD or CAD, returned in the request response. See [Currency Codes](#currencycodes)|
|error              |[error](#errorobject)                  |       |
|status             |enum                                   |This is the status of the transaction request. Possible values are:<ul><li>RECEIVED &ndash; Our system has received the request and is waiting for the downstream processor’s response.</li><li>COMPLETED &ndash; The transaction has been completed.</li><li>PENDING &ndash; Our system has received the request but it has not yet been batched.</li><li>FAILED &ndash; The transaction failed, due to either an error or being declined.</li><li>CANCELLED &ndash; The request has been fully voided (reversed).</li></ul>|
|riskReasonCode     |array                                  |An array of integers is returned, displaying the detailed Risk reason codes if your transaction was declined. It is returned only if your account is configured accordingly.|
|acquirerData       |[acquirerData](#acquirerdataobject)    |This is additional information about your card acquirer, required **only when** you are using Credorax (CRX) as your acquirer for Original Credits. Contact your account manager for more information.|
|acquirerResponse   |[acquirerResponse](#acquirerresponseobject) |This is the raw response returned by an acquirer. It is returned only if your account is configured accordingly.|

```apib
{
  "merchantRefNum":"merchant ABC-444",
  "amount":10098,
  "card":{
    "cardNum":"4111111111111111",
    "cardExpiry":{
      "month":2,
      "year":2019
    }
  },
  "profile":{
    "firstName":"Joe",
    "lastName":"Smith",
    "email":"Joe.Smith@canada.com"
  },
  "billingDetails":{
    "street":"100 Queen Street West",
    "city":"Toronto",
    "state":"ON",
    "country":"CA",
    "zip":"M5H 2N2"
  },
  "customerIp":"204.91.0.12",
  "description":"Winning payment from Loto"
}    
```

<a name="profileobject" title="profile Object"></a>
## profile
|Element            |Type                       |Description    |
|---                |---                        |---                                |
|firstName          |string <br/>`length<=80`   |This is the customer’s first name. |
|lastName           |string <br/>`length<=80`   |This is the customer's last name.  |
|email              |string <br/>`length<=255`  |This is the customer's email address. |

```apib
    {
    "profile": {
        "firstName": "Joe",
        "lastName": "Smith",
        "email": "Joe.Smith@canada.com"
    }
    }
```

<a name="paymentFacilitator" title="paymentFacilitator Object"></a>
## paymentFacilitator
|Element                |Type                       |Description    |
|---                    |---                        |---                                |
|paymentFacilitatorName |string <br/>`min=1 max=50` |This is the payment facilitator name. |
|subMerchantId          |string <br/>`min=1 max=50` |This is an ID that the schemes can use to identify the sub merchant of the payment facilitator. Possible values could be our FMA or some other identifier that the merchant wishes to identify a sub merchant as. The default should be our FMA number. |    
|subMerchantName        |string <br/>`min=1 max=50` |The name of the sub merchant. Potentially can be used as part of the transaction descriptor. Each acquirer integration could be different please see individual implementation for actual behavior.|


```apib
    {
    "paymentFacilitator": {
        "paymentFacilitatorName": "PRE",
        "subMerchantId": "rSubMerId",
        "subMerchantName": "RsubMerName"
    }
    }
```
<a name="purchaseReturnAuthorization" title="purchaseReturnAuthorization Object"></a>
## purchaseReturnAuthorization
|Element                |Type                       |Description    |
|---                    |---                        |---                                |
|id                     |string <br/> `length<=36`  | This is the unique ID returned in the response. This ID can be used for future associated requests.|
|merchantRefNum         |string <br/> `length<=255` | This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.|
|txnTime                |UTC formatted date         | This is the date and time the request was processed. For example: 2014-01-26T10:32:28Z|
|authCode               |string `length<=50`        | This is the Authorization code assigned by the issuing bank and returned in the response.|
|amount                 |number `max=99999999999`   | This is the amount of the request, in minor units. For example, to process US $10.99, this value should be 1099. To process 1000 Japanese yen, this value should be 1000. To process 10.139 Tunisian dinar, this value should be 10139. Note: If the merchant account is set up for a currency that has 3 decimal units, our system will half round up the least significant digit. Therefore, a transaction of 10.139 Tunisian dinar would be processed as 10.14.|
|currencyCode           |string `length=3`          | This is the currency of the merchant account, e.g., USD or CAD, returned in the request response. See [Currency Codes](#currencycodes)|


```apib
    {
      "purchaseReturnAuthorization":{
      "id": "d1fb46ee-2736-4ef5-a724-f263ace75374",
      "merchantRefNum": "merchantRef_2016_04_11_05",
      "txnTime": "2017-02-14T15:12:18Z",
      "authCode": "120072",
      "amount": 5500,
      "currencyCode": "USD"
      }
    }
```


<a name="recipientobject" title="recipient Object"></a>
## recipient 

The recipient is deemed to be the person or party who has the contractual relationship with the merchant/financial institution. This may be different from the cardholder, e.g., in the case of a parent topping up a child's savings account. Therefore, the fields should not be collected on the same page as cardholder information, but instead be passed in the background from the merchant’s records.

**Note:** You can include *recipient* elements in your [authorization request](#authrequest) **only if** your Merchant Category Code is **6012** and your registered trading address is in the United Kingdom. All fields are optional. However, scheme fines may apply if data is consistently not supplied and chargebacks persist. If you have any questions, contact your account manager.
If you are using a payment token for an Authorization request and there is already recipient data for the consumer profile associated with the payment token, then if you include the *recipient* object in the Authorization, this data will override the recipient data already in the profile.

If you [look up an authorization request](#getauth)  that used the *visaAdditionalAuthData* parameter (now deprecated), the response will contain the relevant data in both the *recipient* and the *visaAdditionalAuthData* objects.

|Element                    |Type                       |Description                        |
|---                        |---                        |---                                |
|dateOfBirth                |[dateOfBirth](#dateofbirthobject) |This is the recipient's date of birth. |
|zip                        |string<br/>`length<=10`    |This is the recipient's postcode.<br/>**Note:** The last 3 characters are not sent to the banking network.|
|lastName                   |string<br/>`length<=255`   |This is the recipient's last name.<br/>**Note:** Only the first 6 characters are sent to the banking network.|
|accountNumber              |string<br/>`length<=25`    |This is the recipient's account number, e.g., a loan agreement number or customer ID. In the case where the recipient account is a prepaid card, the card number may be sent in full.<br/>**Note:** Only the first 6 and last 4 characters are sent to the banking network and will be masked accordingly within the back office and any other reports, to comply with PCI regulations.|

```apib
    {
    "recipient": {
        "dateOfBirth": {
            "day": 29,
            "month": 1,
            "year": 2001
        },
        "zip": "CB24 9AD",
        "lastName": "Smith",
        "accountNumber": "ABC1234567890"
    }
    }
```

<a name="refundsobject" title="refunds Object"></a>
## refunds
|Element            |Type                                   |Description                        |
|---                |---                                    |---                                |
|id                 |string <br/>`length<=36`               |This is the ID returned in the response. This ID can be used for future associated requests.|
|merchantRefNum     |string <br/>`length<=255`              |This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.|
|amount             |number<br>`max=99999999999`            |This is the amount of the request, in minor units. For example, to process US $10.99, this value should be 1099. To process 1000 Japanese yen, this value should be 1000. To process 10.139 Tunisian dinar, this value should be 10139.<br/>**Note:** If the merchant account is set up for a currency that has 3 decimal units, our system will half round up the least significant digit. Therefore, a transaction of 10.139 Tunisian dinar would be processed as 10.14.|
|childAccountNum    |string<br/>`length<=10`                |This is the child merchant account number. It is returned only if the transaction was processed via a master account.|
|dupCheck           |boolean                                |This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request within the past 90 days.<br/>**Note:** This value defaults to *true*.|
|txnTime            |UTC formatted date                     |This is the date and time the request was processed. For example:<br/>2014-01-26T10:32:28Z|
|error              |[error](#errorobject)                  |       |
|status             |enum                                   |This is the status of the transaction request. Possible values are:<ul><li>RECEIVED &ndash; Our system has received the request and is waiting for the downstream processor’s response.</li><li>COMPLETED &ndash; The transaction has been completed.</li><li>PENDING &ndash; Our system has received the request but it has not yet been batched.</li><li>FAILED &ndash; The transaction failed, due to either an error or being declined.</li><li>CANCELLED &ndash; The request has been fully voided (reversed).</li></ul>|
|riskReasonCode     |array                                  |An array of integers is returned, displaying the detailed Risk reason codes if your transaction was declined. It is returned only if your account is configured accordingly.|
|acquirerResponse   |[acquirerResponse](#acquirerresponseobject) |This is the raw response returned by an acquirer. It is returned only if your account is configured accordingly.|
|purchaseReturnAuthorization   |[purchaseReturnAuthorization](#purchaseReturnAuthorization) |This is the Purchase Return Authorization that was performed for the refund. Note: Purchase Return Authorization is performed and returned in the response only if acquirer/processor supports it.|

```apib
{
    "merchantRefNum":"refund_id:1231",
    "amount":10098
}
```

<a name="settlementsobject" title="settlements Object"></a>
## settlements
|Element            |Type                                   |Description                        |
|---                |---                                    |---                                |
|id                 |string <br/>`length<=36`               |This is the ID returned in the response. This ID can be used for future associated requests.|
|merchantRefNum     |string <br/>`length<=255`              |This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.|
|amount             |number<br/>`max=99999999999`           |This is the amount of the request, in minor units.For example, to process US $10.99, this value should be 1099. To process 1000 Japanese yen, this value should be 1000. To process 10.139 Tunisian dinar, this value should be 10139.<br/>**Note:** If the merchant account is set up for a currency that has 3 decimal units, our system will half round up the least significant digit. Therefore, a transaction of 10.139 Tunisian dinar would be processed as 10.14.|
|availableToRefund  |number<br/>`max=99999999999`           |This is the amount of this Settlement that is available to Refund, in minor units. For example, US $10.99 would be 1099.|
|childAccountNum    |string<br/>`length<=10`                |This is the child merchant account number. It is returned only if the transaction was processed via a master account.|
|txnTime            |UTC formatted date                     |This is the date and time the request was processed. For example:<br/>2014-01-26T10:32:28Z|
|error              |[error](#errorobject)                  |       |
|dupCheck           |boolean                                |This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request within the past 90 days.<br/>**Note:** This value defaults to *true*.|
|status             |enum                                   |This is the status of the transaction request. Possible values are:<ul><li>RECEIVED &ndash; Our system has received the request and is waiting for the downstream processor’s response.</li><li>PENDING &ndash; Our system has received the request but it has not yet been batched.</li><li>PROCESSING &ndash; The Settlement batch has started.</li><li>COMPLETED &ndash; The transaction has been completed.</li><li>FAILED &ndash; The transaction failed, due to either an error or being declined.</li><li>CANCELLED &ndash; The transaction request has been cancelled.</li></ul>|
|riskReasonCode     |array                                  |An array of integers is returned, displaying the detailed Risk reason codes if your transaction was declined. It is returned only if your account is configured accordingly.|
|acquirerResponse   |[acquirerResponse](#acquirerresponseobject) |This is the raw response returned by an acquirer. It is returned only if your account is configured accordingly.|
|splitpay           |[splitpay](#splitpayobject)            |This enables you to use the Split Payouts functionality when settleing an Authorization.|

```apib
{
    "merchantRefNum":"merchantRef_2014_04_11_05",
    "amount":100
}
```

<a name="shippingdetailsobject" title="shippingDetails Object"></a>
## shippingDetails

|Element            |Type                       |Description |
|---                |---                        |---        |
|carrier            |enum                       |This is the shipment carrier. Possible values are:<ul><li>APC &ndash; APC Overnight</li><li>APS &ndash; Anpost</li><li>CAD &ndash; Canada Postal Service</li><li>DHL &ndash; DHL</li><li>FEX &ndash; Fedex</li><li>RML &ndash; Royal Mail</li><li>UPS &ndash; United Parcel Service</li><li>USPS &ndash; United States Postal Service</li><li>CLK &ndash; CityLink</li><li>EMS &ndash; EMS (US Postal Service)</li><li>NEX &ndash; Nexworldwide</li><li>OTHER</li></ul>|
|shipMethod         |enum                       |This is the method of shipment. Possible values are:<ul><li>N &ndash; Next Day/Overnight</li><li>T &ndash; Two-Day Service</li><li>C &ndash; Lowest Cost</li><li>O &ndash; Other</li></ul>|
|recipientName      |string<br/>`length<=255`   |This is the name of the person receiving the goods.|
|street             |string<br/>`length<=50`    |This is the recipient's street address.|
|city               |string<br/>`length<=40`    |This is the city in which the recipient resides.|
|state              |string                     |See [Province Codes](#provincecodes) or [State Codes](#statecodes) for Canada or the United States.|
|country            |enum                       |See [Country Codes](#countrycodes). |
|zip                |string<br/>`length<=10`    |This is the recipient's postal/zip code. |

```apib
  {
  "shippingDetails":{
    "carrier":"UPS",
    "shipMethod":"N",
    "recipientName":"Jane Smith",
    "street":"100 Queen Street West",
    "city":"Toronto",
    "state":"ON",
    "country":"CA",
    "zip":"M5H 2N2"
  }
  }
```

<a name="splitpayobject" title="splitpay Object"></a>
## splitpay

|Element            |Type    |Required |Description |
|---                |---     |---      |---        |
|linkedAccount      |string  |Yes      |This is the ID of the linked account.
|amount             |number  |         |This is the amount to transfer to the linked account in minor currency units. The total amount to all linked accounts cannot exceed the transaction total. Either this or percent must be specified.|
|percent            |number  |         |This is the percentage of the total transaction amount to transfer to the linked account, to two decimal places. The total percentage to all linked accounts cannot exceed 100%. Either this or amount must be specified.|

```apib
  {
  "splitpay": [
    {
    "linkedAccount": "123124124",
    "percent": 5
    },
    {
    "linkedAccount": "767862873",
    "amount": 500
    }]
  }
```

<a name="standalonecreditsobject" title="standalonecredits Object"></a>
## standalonecredits

|Element            |Type                                   |Description                        |
|---                |---                                    |---                                |
|id                 |string <br/>`length<=36`               |This is the ID returned in the response. This ID can be used for future associated requests.|
|merchantRefNum     |string <br/>`length<=255`              |This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.|
|amount             |number<br/>`max=99999999999`           |This is the amount of the request, in minor units.For example, to process US $10.99, this value should be 1099. To process 1000 Japanese yen, this value should be 1000. To process 10.139 Tunisian dinar, this value should be 10139.<br/>**Note:** If the merchant account is set up for a currency that has 3 decimal units, our system will half round up the least significant digit.|
|childAccountNum    |string<br/>`length<=10`                |This is the child merchant account number. It is returned only if the transaction was processed via a master account.|
|card               |[card](#cardobject)                    |These are the details of the card used.|
|authCode           |string<br/>`length<=50`                |This is the Authorization code assigned by the issuing bank and returned in the response.|
|profile            |[profile](#profileobject)              |These are some details about the customer.|
|billingDetails     |[billingDetails](#billingdetailsobject)|These are the billing details for the request.|
|customerIp         |string<br/>`length<=39`                |This is the customer's IP address.|
|dupCheck           |boolean                                |This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request within the past 90 days.<br/>**Note:** This value defaults to *true*.|
|description        |string<br/>`length<=255`               |This is a description of the transaction, provided by the merchant.|
|txnTime            |UTC formatted date                     |This is the date and time the request was processed. For example:<br/>2014-01-26T10:32:28Z|
|currencyCode       |string<br/>`length=3`                  |This is the currency of the merchant account, e.g., USD or CAD, returned in the request response. See [Currency Codes](#currencycodes)|
|error              |[error](#errorobject)                  |       |
|status             |enum                                   |This is the status of the transaction request. Possible values are:<ul><li>RECEIVED &ndash; Our system has received the request and is waiting for the downstream processor’s response.</li><li>COMPLETED &ndash; The transaction has been completed.</li><li>PENDING &ndash; Our system has received the request but it has not yet been batched.</li><li>FAILED &ndash; The transaction failed, due to either an error or being declined.</li><li>CANCELLED &ndash; The request has been fully voided (reversed).</li></ul>|
|riskReasonCode     |array                                  |An array of integers is returned, displaying the detailed Risk reason codes if your transaction was declined. It is returned only if your account is configured accordingly.|
|acquirerResponse   |[acquirerResponse](#acquirerresponseobject) |This is the raw response returned by an acquirer. It is returned only if your account is configured accordingly.|

```apib
{
  "merchantRefNum":"merchant ABC-444",
  "amount":10098,
  "card":{
    "cardNum":"4111111111111111",
    "cardExpiry":{
      "month":2,
      "year":2019
    }
  },
  "profile":{
    "firstName":"Joe",
    "lastName":"Smith",
    "email":"Joe.Smith@canada.com"
  },
  "billingDetails":{
    "street":"100 Queen Street West",
    "city":"Toronto",
    "state":"ON",
    "country":"CA",
    "zip":"M5H 2N2"
  },
  "customerIp":"204.91.0.12",
  "description":"Refund without receipt"
}    
```

<a name="storedcredentialobject" title="storedCredential Object"></a>
## storedCredential

The *storedCredential* object is used to identify [authorization requests](#authrequest) that use stored credentials for a consumer, in order to improve authorization rates and reduce fraud. Stored credentials can be used in two cases: 
 - Using a payment token &ndash; An authorization request that uses a *paymentToken* from the [Customer Vault API](https://developer.paysafe.com/en/vault/api/)
 - Using a card number &ndash; An authorization request that uses a credit card number stored by the merchant 

**Notes:** 
 - If you use a *paymentToken* in the authorization request but do not include the *storedCredential* object, Paysafe will provide default information taken from Customer Vault data.
 - You cannot include both the *storedCredential* object and the *recurring* parameter in the same authorization request. Paysafe recommends using the *storedCredential* object.
 - The *cvv* parameter of the [card object](#cardobject) is required when the *occurrence* parameter is set to *INITIAL*. However, *cvv* is not required when the *occurrence* parameter is set to *SUBSEQUENT*.
 - The *storedCredential* object cannot be used for Apple Pay or Google Pay transactions.

|Element                       |Type                   |Description|
|---                           |---                    |---|
|type                          |enum                   |This specifies the type of request being made. Possible values are: <ul><li>ADHOC &ndash; Ad hoc consumer-initiated request</li><li>TOPUP &ndash;  Unscheduled merchant-iniitated request </li><li>RECURRING &ndash; Scheduled, merchant-initiated recurring request</li></ul><br/>**Note:** This value defaults to *ADHOC*.|
|occurrence                    |enum                   |This specifies whether this stored credential request is initial or recurring. Possible values are: <ul><li>INITIAL &ndash; Used when this is the first time the consumer uses this credit card</li><li>SUBSEQUENT &ndash; Used when the consumer uses this credit card for subsquent requests </li></ul><br/>**Note:** This value defaults to *INITIAL*.|
|initialTransactionId          |string <br/>`length<=36`  |Id of the initial Recurring Payment transaction. <br/>This id should be stored from the auth response of the transaction indicated as initial with the following: type=RECURRING/TOPUP, occurrence=INITIAL.<br/>This reference should be provided when:<br/><ul><li>type=RECURRING and occurrence=SUBSEQUENT<li>type=TOPUP and occurrence=SUBSEQUENT</li></ul><br/>**Note:** This reference is a must to meet PSD 2 authentication process requirements for merchant initiated transactions successfully.|
|externalInitialTransactionId  |string <br/>`length<=256`|Id of the initial Recurring Payment transaction in case this transaction was processed through external PSP.<br/>This reference should be provided only when:<br/><ul><li>type=RECURRING and occurrence=SUBSEQUENT</li><li>type=TOPUP and occurrence=SUBSEQUENT</li></ul><br/>**Note:** This reference cannot be provided along with initialTransactionId.|

```apib
{
    "storedCredential": {
        "type": "RECURRING",
        "occurrence": "SUBSEQUENT"
    }
}
```
<a name="ticket" title="ticket Object"></a>
## ticket

**Note** This object is only for Airline Merchants

Information about the Airline Ticket Number and if the ticket is restricted

|Element                       |Type                      |Description|
|---                           |---                       |---|
|ticketNumber                  |string <br/>`min=1 max=15`|Airline Ticket Number|
|isRestrictedTicket            |boolean                   |Indicates whether this ticket is non-refundable. This entry should be supplied on CPS/Passenger Transport 1 or 2 transactions if the ticket was purchased as a non-refundable ticket.Valid values are:<ul><li>false - No restriction (default)</li><li>true - Restricted (non-refundable) ticket</li></ul>|

```apib
{
    "ticket": {
        "ticketNumber": 1234567891011,
        "isRestrictedTicket": false
    }
}
```

<a name="travelAgency" title="travelAgency Object"></a>
## travelAgency

**Note** This object is only for Airline Merchants

Information about the travel agency if the ticket was issued by a travel agency.

|Element                       |Type                      |Description|
|---                           |---                       |---|
|code                          |string <br/>`min=1 max=8` |Code identifying travel agency if the ticket was issued by a travel agency.|
|name                          |string <br/>`min=1 max=25`|Name of travel agency if the ticket was issued by a travel agency.|

```apib
{
    "travelAgency": {
      "name": "MY AGENT",
      "code": "MYAGENT347"
    }
}
```

<a name="tripLegs" title="tripLegs Object"></a>
## tripLegs

**Note** This object is only for Airline Merchants

A grouping of up to four trip legs. Each leg provides detailed itinerary data.

|Element                       |Type    |Description|
|---                           |---     |---|
|[leg1](#leg)                  |object  |Description of first leg of trip.|
|[leg2](#leg)                  |object  |Description of second leg of trip.|
|[leg3](#leg)                  |object  |Description of third leg of trip.|
|[leg4](#leg)                  |object  |Description of fourth leg of trip.|

```apib
{
   "tripLegs": {
      "leg1": {
        "flight": {
          "carrierCode": "LH",
          "flightNumber": "0799"
        },
        "serviceClass": "F",
        "isStopOverAllowed": "true",
        "destination": "ISL",
        "fareBasis": "VMAY",
        "departureDate": "2021-01-26"
      },
      "leg2": {
        "flight": {
          "carrierCode": "TK",
          "flightNumber": "1385"
        },
        "serviceClass": "F",
        "isStopOverAllowed": "true",
        "destination": "SOF",
        "fareBasis": "VMAY",
        "departureDate": "2021-01-26"
      }
    }
}
```
<a name="verificationsobject" title="verifications Object"></a>
## verifications

|Element            |Type                                   |Description                        |
|---                |---                                    |---                                |
|id                 |string <br/>`length<=36`               |This is the ID returned in the response. This ID can be used for future associated requests.|
|merchantRefNum     |string <br/>`length<=255`              |This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.|
|childAccountNum    |string<br/>`length<=10`                |This is the child merchant account number. It is returned only if the transaction was processed via a master account.|
|card               |[card](#cardobject)                    |These are the details of the card used.|
|authCode           |string<br/>`length<=50`                |This is the Authorization code assigned by the issuing bank and returned in the response.|
|profile            |[profile](#profileobject)              |These are some details about the customer.|
|billingDetails     |[billingDetails](#billingdetailsobject)|These are the billing details for the request.|
|customerIp         |string<br/>`length<=39`                |This is the customer's IP address.|
|dupCheck           |boolean                                |This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request  within the past 90 days.<br/>**Note:** This value defaults to *true*.|
|description        |string<br/>`length<=255`               |This is a description of the transaction, provided by the merchant.|
|txnTime            |UTC formatted date                     |This is the date and time the request was processed. For example:<br/>2014-01-26T10:32:28Z|
|currencyCode       |string<br/>`length=3`                  |This is the currency of the merchant account, e.g., USD or CAD, returned in the request response. See [Currency Codes](#currencycodes)|
|avsResponse        |enum                                   |This is the AVS response from the card issuer. Possible values are: <ul><li>MATCH  </li><li>MATCH_ADDRESS_ONLY</li><li>MATCH_ZIP_ONLY</li><li>NO_MATCH</li><li>NOT_PROCESSED</li><li>UNKNOWN</li></ul>|
|cvvVerification    |enum                                   |This is the response to the *cvv* submitted with the transaction request. Possible values are:<ul><li>MATCH </li><li>NO_MATCH</li><li>NOT_PROCESSED</li><li>UNKNOWN</li></ul>|
|error              |[error](#errorobject)                  |       |
|status             |enum                                   |This is the status of the transaction request. Possible values are:<ul><li>RECEIVED &ndash; Our system has received the request and is waiting for the downstream processor’s response.</li><li>COMPLETED &ndash; The transaction has been completed.</li><li>FAILED &ndash; The transaction failed, due to either an error or being declined.</li></ul>|
|riskReasonCode     |array                                  |An array of integers is returned, displaying the detailed Risk reason codes if your transaction was declined. It is returned only if your account is configured accordingly.|
|acquirerResponse   |[acquirerResponse](#acquirerresponseobject) |This is the raw response returned by an acquirer. It is returned only if your account is configured accordingly.|
|storedCredential   |[storedCredential](#storedcredentialobject) |Identifies requests that use stored credentials that the merchant has on file for the consumer, in order to improve authorization rates and reduce fraud.<br/>**Note:** You cannot include both the *recurring* parameter and the *storedCredential* object in the same authorization request. Paysafe recommends using the *storedCredential* object.|

```apib
{
    "merchantRefNum": "merchant ABC-444",
    "card": {
        "cardNum": "4111111111111111",
        "cardExpiry": {
            "month": 2,
            "year": 2019
        },
        "cvv": "123"
    },
    "profile": {
        "firstName": "Joe",
        "lastName": "Smith",
        "email": "Joe.Smith@canada.com"
    },
    "billingDetails": {
        "street": "100 Queen Street West",
        "city": "Toronto",
        "state": "ON",
        "country": "CA",
        "zip": "M5H2N2"
    },
    "customerIp": "204.91.0.12",
    "description": "This is a test transaction"
}    
```

# Error Summary

<a name="commonerrors" title="Common Errors"></a>
## Common Errors
|HTTP Status Code   |Error Code     |Description|
|---                |---            |---|
|500                |1000           |An internal error occurred.         |
|502                |1001           |An error occurred with the external processing gateway.|
|500                |1002           |An internal error occurred.            |
|500                |1003           |An internal error occurred.            |
|500                |1007           |An internal error occurred.            |
|500                |1008           |An internal error occurred.            |
|429                |1200           |The API call has been denied as it has exceeded the permissible call rate limit.|
|401                |5000           |Your merchant account authentication failed. Either your store ID/password are invalid or the IP address from which you are sending the transaction has not been authorized.|
|400                |5001           |The submitted currency code is invalid or your account does not support this currency.|
|400                |5003           |You submitted an invalid amount with your request.|
|400                |5004           |You submitted an invalid account type with your request.|
|400                |5005           |You submitted an invalid operation type with your request.|
|400                |5010           |The submitted country code is invalid.|
|400                |5016           |The merchant account you provided cannot be found.|
|400                |5017           |The merchant account you provided is disabled.|
|402                |5021           |Your transaction request has been declined.|
|400                |5023           |The request is not parseable.|
|409                |5031           |The transaction you have submitted has already been processed.|
|401                |5040           |Your merchant account is not configured for the transaction you attempted.|
|400                |5042           |The merchant reference number is missing or invalid or it exceeds the maximum permissible length.|
|400                |5068           |Either you submitted a request that is missing a mandatory field or the value of a field does not match the format expected.|
|404                |5269           |The ID(s) specified in the URL do not correspond to the values in the system.|
|403                |5270           |The credentials provided with the request do not have permission to access the requested data.|
|406                |5271           |You requested a response in the 'Accept' header that is in an unsupported format.|
|406                |5272           |The 'Content-Type' you specified in request header was submitted in an unsupported format.|
|404                |5273           |Your client reached our application but we were unable to service your request due to an invalid URL.|
|401                |5275           |The authentication credentials provided with the request have expired.|
|401                |5276           |The authentication credentials provided with the request provided have been disabled.|
|401                |5277           |The authentication credentials provided with the request have been locked due to multiple authentication failures.|
|401                |5278           |The authentication credentials provided with the request were not accepted for an unknown reason.|
|401                |5279           |The authentication credentials are invalid.|
|401                |5280           |The required authentication credentials were not provided.|
|405                |5281           |The request uses an action (e.g., GET, POST, or PUT) that is not supported by the resource.|
|400                |5501           |The profile does not have an active credit card. |
|400                |5502           |Either the payment token is invalid or the corresponding profile or bank account is not active.|

<a name="autherrors" title="Authorization Errors"></a>
## Authorization Errors
|HTTP Status Code   |Error Code     |Description|
|---                |---            |---|
|400                |3002           |You submitted an invalid card number or brand or combination of card number and brand with your request. |
|400                |3004           |The zip/postal code must be provided for an AVS check request.|
|400                |3005           |You submitted an incorrect CVV value with your request.|
|400                |3006           |You submitted an expired credit card number with your request.|
|402                |3007           |Your request has failed the AVS check. Note that the amount has still been reserved on the customer's card and will be released in 3&ndash;5 business days. Please ensure the billing address is accurate before retrying the transaction.|
|400                |3008           |You submitted a card type for which the merchant account is not configured.|
|402                |3009           |Your request has been declined by the issuing bank.|
|402                |3011           |Your request has been declined by the issuing bank because the card used is a restricted card. Contact the cardholder's credit card company for further investigation.|
|402                |3012           |Your request has been declined by the issuing bank because the credit card expiry date submitted is invalid.|
|402                |3013           |Your request has been declined by the issuing bank due to problems with the credit card account.|
|402                |3014           |Your request has been declined - the issuing bank has returned an unknown response. Contact the card holder's credit card company for further investigation.|
|402                |3015           |The bank has requested that you process the transaction manually by calling the cardholder's credit card company.|
|402                |3016           |The bank has requested that you retrieve the card from the cardholder &ndash; it may be a lost or stolen card.|
|402                |3017           |You submitted an invalid credit card number with your request.|
|402                |3018           |The bank has requested that you retry the transaction.|
|402                |3019           |Your request has failed the CVV check.  Please note that the amount may still have been reserved on the customer's card, in which case it will be released in 3&ndash;5 business days.|
|402                |3020           |The bank has requested that you retry the transaction.|
|404                |3021           |The confirmation number included in this request could not be found.|
|402                |3022           |The card has been declined due to insufficient funds.|
|402                |3023           |Your request has been declined by the issuing bank due to its proprietary card activity regulations.|
|402                |3024           |Your request has been declined because the issuing bank does not permit the transaction for this card.|
|400                |3025           |The external processing gateway has reported invalid data.|
|400                |3026           |The external processing gateway has reported the account type is invalid.|
|402                |3027           |The external processing gateway has reported a limit has been exceeded.|
|502                |3028           |The external processing gateway has reported a system error.|
|402                |3029           |The external processing gateway has rejected the transaction.|
|402                |3030           |The external processing gateway has reported the transaction is unauthorized.|
|400                |3031           |The confirmation number you submitted with your request references a transaction that is not on hold.|
|402                |3032           |Your request has been declined by the issuing bank or external gateway because the card is probably in one of their negative databases.|
|402                |3035           |Your request has been declined due to exceeded PIN attempts.|
|402                |3036           |Your request has been declined due to an invalid issuer.|
|402                |3037           |Your request has been declined because it is invalid.|
|402                |3038           |Your request has been declined due to customer cancellation.|
|402                |3039           |Your request has been declined due to an invalid authentication value.|
|402                |3040           |Your request has been declined because the request type is not permitted on the card.|
|402                |3041           |Your request has been declined due to a timeout.|
|402                |3042           |Your request has been declined due to a cryptographic error.|
|402                |3044           |You have submitted a duplicate request.|
|402                |3045           |You submitted an invalid date format for this request.|
|402                |3046           |The transaction was declined because the amount was set to zero.|
|402                |3047           |The transaction was declined because the amount exceeds the floor limit.|
|402                |3048           |The transaction was declined because the amount is less than the floor limit.|
|402                |3049           |The bank has requested that you retrieve the card from the cardholder &ndash; the credit card has expired.|
|402                |3050           |The bank has requested that you retrieve the card from the cardholder &ndash; fraudulent activity is suspected.|
|402                |3051           |The bank has requested that you retrieve the card from the cardholder &ndash; contact the acquirer for more information.|
|402                |3052           |The bank has requested that you retrieve the card from the cardholder &ndash; the credit card is restricted.|
|402                |3053           |The bank has requested that you retrieve the card from the cardholder &ndash; please call the acquirer.|
|402                |3054           |The transaction was declined due to suspected fraud.|
|402                |3055           |This type of transaction is not supported.|
|402                |3056           |The original transaction type does not match.|
|402                |3057           |Please tell cardholder to call the issuer &ndash; do not retry transaction.|

<a name="voidautherrors" title="Void Authorization Errors"></a>
## Void Authorization Errors
|HTTP Status Code   |Error Code     |Description|
|---                |---            |---|
|400                |3500           |The confirmation number included in this request could not be found.|
|402                |3501           |The requested void (Authorization Reversal) amount exceeds the remaining Authorization amount.|
|402                |3502           |You cannot process a void (Authorization Reversal) transaction against an Authorization that has been settled.|
|402                |3503           |The void (Authorization Reversal) transaction is not supported for the card type used for the Authorization you are attempting to void.|
|402                |3504           |The external processing gateway for which your merchant account is configured does not support partial voids (Authorization Reversals).|
|500                |3505           |The void (Authorization Reversal) could not be completed.|
|402                |3506           |The void (Authorization Reversal) amount exceeds the remaining amount of the Authorization.|
|402                |3507           |The Authorization does not support a partial void (Authorization Reversal). |

<a name="settlementerrors" title="Settlement Errors"></a>
## Settlement Errors
|HTTP Status Code   |Error Code     |Description|
|---                |---            |---|
|400                |3200           |You have submitted an invalidly formatted Authorization ID for this Settlement.|
|404                |3201           |The Authorization ID included in this Settlement request could not be found.|
|402                |3202           |You have exceeded the maximum number of Settlements allowed.|
|402                |3203           |The Authorization is either fully settled or cancelled.|
|402                |3204           |The requested Settlement amount exceeds the remaining Authorization amount.|
|402                |3205           |The Authorization you are attempting to settle has expired.|
|402                |3206           |The external processing gateway has rejected the transaction.|
|402                |3207           |Due to issuer policies, this type of transaction is not allowed.|

<a name="refunderrors" title="Refund Errors"></a>
## Refund Errors
|HTTP Status Code   |Error Code     |Description|
|---                |---            |---|
|402                |3402           |The requested Refund amount exceeds the remaining Settlement amount.|
|402                |3403           |You have already processed the maximum number of refunds allowed for this Settlement.|
|402                |3404           |The Settlement has already been fully refunded.|
|402                |3405           |The Settlement you are attempting to Refund has expired.|
|402                |3406           |The Settlement you are attempting to Refund has not been batched yet. There are no settled funds available to Refund.|
|400                |3407           |The Settlement referred to by the transaction response ID you provided cannot be found.|
|400                |3408           |You have submitted an invalidly formatted response ID for the original Purchase or Settlement.|
|402                |3412           |The Refund transaction you attempted was not permitted because your merchant account is in overdraft.|
|402                |3413           |The requested Refund amount exceeds the permissible Visa credit ratio.|
|400                |3414           |The Refund referred to by the transaction response ID you provided cannot be found.|
|402                |3415           |You cannot cancel this transaction as it is no longer in a pending state.|
|402                |3416           |The external processing gateway for which your merchant account is configured does not support partial Settlements.|
|402                |3417           |There is already another request being processed on the transaction referenced for this request. |
|402                |3418           |The external processing gateway for which your merchant account is configured does not support partial Credits.|
|402                |3419           |This type of transaction cannot be refunded.|
|500                |3420           |An error occurred while processing the purchase return authorization.|
|402                |3421           |The purchase return authorization has been declined by the issuing bank.|
|402                |3422           |The purchase return authorization has failed.|
|500                |3423           |An error occurred while processing the purchase return authorization reversal.|
|500                |3424           |Something went wrong with the purchase return authorization, please retry the transaction.|


# Using the Example API Calls (Console Window)
To configure and test the API examples, first click on one of the API calls in the API Reference section and then click **Switch to Console** in the right hand pane.
Using the Console window you can update the headers, the request body, and parts of the API endpoint.
For example, for many requests you must update the endpoint to include your account ID, which you do by selecting **URI Parameters** and then updating the **account_id** value.
(To get your account ID, log into the Paysafe Back Office, choose **Accounts** and look in the *Account* column).
You must also update the Header to include your API Key by selecting **Headers** and then updating the **Authorization** value using the Base64
version of your API key. To get your API key, log into the Test version of the Merchant Back Office and choose **Settings > API Key**.
Click *View Base 64 Encoded* and copy the key to your clipboard. Paste the key after the word Basic to replace the text YOUR-BASE64-ENCODED-API-KEY.
When you are ready to test your example, you can choose between the Production and Mock server environment:
* Production server – This calls the resource on Paysafe's Test system.
* Mock server – This environment simply returns the dummy values in the example response irrespective of the parameters you supply. You do not need to use your account ID or Test API key for this request.

To call the API resource, click **Call Resource**. The response is displayed in the Console window.

# Legal and Community
<ul>
<li><a href="https://www.paysafe.com/paysafegroup/privacy-policy/" target="_blank">Privacy Policy</a></li>
<li><a href="https://developer.paysafe.com/en/resources-and-support/terms-of-use/" target="_blank">Terms of Use</a></li>
<li><a href="https://www.paysafe.com/paysafegroup/regulatory-disclosures/" target="_blank">Regulatory Disclosures</a></li>
<li><a href="http://community.paysafe.com/spaces/11/index.html" target="_blank">FAQs</a></li>
<li><a href="http://community.paysafe.com/index.html" target="_blank">Community</a></li>
<li><a href="http://community.paysafe.com/spaces/10/index.html" target="_blank">Paysafe Blog</a></li>
</ul>

## Verify That the Service Is Accessible [GET /monitor]
<a name="verifyservice" title="Verify Service"></a>

This call returns a status of READY if the API is available.

+ Response 200 (application/json)

  + Body

            {
                "status" : "READY"
            }

# Authorizations [/auths]
<a name="auths" title="Authorizations"></a>

## Authorization [POST /v1/accounts/{account_id}/auths]
<a name="authrequest" title="Authorization Request"></a>

Click on **Authorization** above to see four examples of an Authorization request: 

* An Authorization request that will have to be settled later
* A purchase request, which authorizes and settles the payment in a single request by setting the *settleWithAuth* parameter to *true*
* An Authorization request using a payment token
* An Authorization including 3D Secure 1.0.2 authentication data 
* An Authorization including 3D Secure 2 authentication data
* A Regular Authorization with ignored airline travel details for AIRLINE merchants only
* A purchase request, which authorizes and settles the payment in a single request by setting the *settleWithAuth* parameter to *true* for AIRLINE merchants only


In the case of an Authorization request using a payment token, you can use either of two payment token types:

* The permanent, reusable payment token that you receive in the response to a Customer Vault [card creation request](https://developer.paysafe.com/en/payments/vault/api/#/reference/0/cards/create-a-card)
* The temporary payment token that you receive in the response to a Customer Vault [mobile single-use token creation request](https://developer.paysafe.com/en/payments/vault/api/#/reference/0/mobile-device-single-use-tokens/create-a-mobile-device-single-use-token),  [Google Pay single-use token creation request](https://developer.paysafe.com/en/vault/api/#/reference/single-use-tokens/google-payment-api-single-use-tokens/create-a-google-payment-api-single-use-token),or [Apple Pay single-use token creation request](https://developer.paysafe.com/en/payments/vault/api/#/reference/0/apple-pay-single-use-tokens/create-an-apple-pay-single-use-token), or when using the [Paysafe.js SDK](https://developer.paysafe.com/en/sdks/paysafejs/tokenize/)

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.

+ Attributes
    + Include Authorization
    + Include links
    + Include airlineTravelDetails

+ Request Submit an Authorization Request (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
              "merchantRefNum": "merchant 03.24.17_3",
              "amount": 1000,
              "settleWithAuth": false,
              "dupCheck": false,
              "card": {
                "cardNum": "4111111111111111",
                "cardExpiry": {
                  "month": 2,
                  "year": 2019
                },
                "cvv": "123"
              },
              "profile": {
                "firstName": "Joe",
                "lastName": "Smith",
                "email": "Joe.Smith@canada.com"
              },
              "billingDetails": {
                "street": "100 Queen Street West",
                "city": "Toronto",
                "state": "ON",
                "country": "CA",
                "zip": "M5H 2N2"
              },
              "customerIp": "204.91.0.12",
              "description": "Video purchase"
            }


+ Response 200 (application/json)

    + Body

            {
                "id": "7573f618-2f63-45aa-ae96-8412206ca403",
                "merchantRefNum": "merchant 03.24.17_3",
                "txnTime": "2017-03-24T18:28:28Z",
                "status": "COMPLETED",
                "amount": 1000,
                "settleWithAuth": false,
                "availableToSettle": 1000,
                "card": {
                    "type": "VI",
                    "lastDigits": "1111",
                    "cardExpiry": {
                        "month": 2,
                        "year": 2019
                    }
                },
                "authCode": "180796",
                "profile": {
                    "firstName": "Joe",
                    "lastName": "Smith",
                    "email": "Joe.Smith@canada.com"
                },
                "billingDetails": {
                    "street": "100 Queen Street West",
                    "city": "Toronto",
                    "state": "ON",
                    "country": "CA",
                    "zip": "M5H2N2"
                },
                "customerIp": "204.91.0.12",
                "description": "Video purchase",
                "currencyCode": "CAD",
                "avsResponse": "MATCH",
                "cvvVerification": "MATCH",
                "links": [
                    {
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/auths/7573f618-2f63-45aa-ae96-8412206ca403"
                    }
                ]
            }

+ Request Submit an Authorization Including Settlement (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
              "merchantRefNum": "merchant 03.24.17_3",
              "amount": 1000,
              "settleWithAuth": true,
              "dupCheck": false,
              "card": {
                "cardNum": "4111111111111111",
                "cardExpiry": {
                  "month": 2,
                  "year": 2019
                },
                "cvv": "123"
              },
              "profile": {
                "firstName": "Joe",
                "lastName": "Smith",
                "email": "Joe.Smith@canada.com"
              },
              "billingDetails": {
                "street": "100 Queen Street West",
                "city": "Toronto",
                "state": "ON",
                "country": "CA",
                "zip": "M5H 2N2"
              },
              "customerIp": "204.91.0.12",
              "description": "Video purchase"
            }    


+ Response 200 (application/json)

    + Body

            {
                "id": "7573f618-2f63-45aa-ae96-8412206ca403",
                "merchantRefNum": "merchant 03.24.17_3",
                "txnTime": "2017-03-24T18:28:28Z",
                "status": "COMPLETED",
                "amount": 1000,
                "settleWithAuth": true,
                "availableToSettle": 0,
                "card": {
                    "type": "VI",
                    "lastDigits": "1111",
                    "cardExpiry": {
                        "month": 2,
                        "year": 2019
                    }
                },
                "authCode": "180796",
                "profile": {
                    "firstName": "Joe",
                    "lastName": "Smith",
                    "email": "Joe.Smith@canada.com"
                },
                "billingDetails": {
                    "street": "100 Queen Street West",
                    "city": "Toronto",
                    "state": "ON",
                    "country": "CA",
                    "zip": "M5H2N2"
                },
                "customerIp": "204.91.0.12",
                "description": "Video purchase",
                "currencyCode": "CAD",
                "avsResponse": "MATCH",
                "cvvVerification": "MATCH",
                "settlements": [{
                    "links": [{
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/settlements/7573f618-2f63-45aa-ae96-8412206ca403"
                    }],
                    "id": "994f621d-f692-4282-9b2f-db3ea14c93a7",
                    "merchantRefNum": "merchant ABC-555666",
                    "txnTime": "2016-09-29T19:29:34Z",
                    "status": "PENDING",
                    "amount": 15098,
                    "availableToRefund": 15098
                }],
                "links": [{
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/auths/7573f618-2f63-45aa-ae96-8412206ca403"
                    },
                    {
                        "rel": "settlement",
                        "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/settlements/7573f618-2f63-45aa-ae96-8412206ca403"
                    }
                ]
            }

+ Request Submit an Authorization Request Using a Payment Token (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
              "merchantRefNum": "merchant 03.24.17_3",
              "amount": 1000,
              "settleWithAuth": false,
              "dupCheck": false,
              "card": {
                "paymentToken": "LTEyMzYzMjQ3ODg",
                "cvv": "123"
              },
              "keywords": [
                "Repeat Customer",
                "Profile"
              ],
              "customerIp": "204.91.0.12",
              "description": "Video purchase"
            }


+ Response 200 (application/json)

    + Body

            {
                "id": "7573f618-2f63-45aa-ae96-8412206ca403",
                "merchantRefNum": "merchant 03.24.17_3",
                "txnTime": "2017-03-24T18:28:28Z",
                "status": "COMPLETED",
                "amount": 1000,
                "settleWithAuth": false,
                "availableToSettle": 1000,
                "card": {
                    "type": "VI",
                    "lastDigits": "1111",
                    "cardExpiry": {
                        "month": 2,
                        "year": 2019
                    }
                },
                "authCode": "180796",
                "profile": {
                    "firstName": "Joe",
                    "lastName": "Smith",
                    "email": "Joe.Smith@canada.com"
                },
                "billingDetails": {
                    "street": "100 Queen Street West",
                    "city": "Toronto",
                    "state": "ON",
                    "country": "CA",
                    "zip": "M5H2N2"
                },
                "customerIp": "204.91.0.12",
                "keywords": [
                    "REPEAT CUSTOMER",
                    "PROFILE"
                ],
                "description": "Video purchase",
                "currencyCode": "CAD",
                "avsResponse": "MATCH",
                "cvvVerification": "MATCH",
                "links": [
                    {
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/auths/7573f618-2f63-45aa-ae96-8412206ca403"
                    }
                ]
            }

+ Request Submit an Authorization Request with 3DS 1.0.2 Authentication Data (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
                "merchantRefNum": "merchant 03.24.17_3",
                "amount": 1000,
                "settleWithAuth": false,
                "dupCheck": false,
                "card": {
                    "cardNum": "4111111111111111",
                    "cardExpiry": {
                        "month": 2,
                        "year": 2019
                    },
                    "cvv": "123"
                },
                "authentication": {
                    "eci":5,
                    "cavv":"AAABCIEjYgAAAAAAlCNiENiWiV+=",
                    "xid":"OU9rcTRCY1VJTFlDWTFESXFtTHU=",
                    "threeDEnrollment":"Y",
                    "threeDResult":"Y",
                    "threeDSecureVersion":"1.0.2",
                    "signatureStatus":"Y"
                },
                "profile": {
                    "firstName": "Joe",
                    "lastName": "Smith",
                    "email": "Joe.Smith@canada.com"
                },
                "billingDetails": {
                    "street": "100 Queen Street West",
                    "city": "Toronto",
                    "state": "ON",
                    "country": "CA",
                    "zip": "M5H 2N2"
                },
                "customerIp": "204.91.0.12",
                "description": "Video purchase"
            }


+ Response 200 (application/json)

    + Body

            {
                "id": "7573f618-2f63-45aa-ae96-8412206ca403",
                "merchantRefNum": "merchant 03.24.17_3",
                "txnTime": "2017-03-24T18:28:28Z",
                "status": "COMPLETED",
                "amount": 1000,
                "settleWithAuth": false,
                "availableToSettle": 1000,
                "card": {
                    "type": "VI",
                    "lastDigits": "1111",
                    "cardExpiry": {
                        "month": 2,
                        "year": 2019
                    }
                },
                "authentication": {
                    "eci":5,
                    "cavv":"AAABCIEjYgAAAAAAlCNiENiWiV+=",
                    "xid":"OU9rcTRCY1VJTFlDWTFESXFtTHU=",
                    "threeDEnrollment":"Y",
                    "threeDResult":"Y",
                    "threeDSecureVersion":"1.0.2",
                    "signatureStatus":"Y"
                },                
                "authCode": "180796",
                "profile": {
                    "firstName": "Joe",
                    "lastName": "Smith",
                    "email": "Joe.Smith@canada.com"
                },
                "billingDetails": {
                    "street": "100 Queen Street West",
                    "city": "Toronto",
                    "state": "ON",
                    "country": "CA",
                    "zip": "M5H2N2"
                },
                "customerIp": "204.91.0.12",
                "description": "Video purchase",
                "currencyCode": "CAD",
                "avsResponse": "MATCH",
                "cvvVerification": "MATCH",
                "links": [
                    {
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/auths/7573f618-2f63-45aa-ae96-8412206ca403"
                    }
                ]
            }

+ Request Submit an Authorization Request with 3D Secure 2 Authentication Data (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
                "merchantRefNum": "merchant 03.24.17_3",
                "amount": 1000,
                "settleWithAuth": false,
                "dupCheck": false,
                "card": {
                    "cardNum": "4111111111111111",
                    "cardExpiry": {
                        "month": 2,
                        "year": 2019
                    },
                    "cvv": "123"
                },
                "authentication": {
                    "eci":5,
                    "cavv":"AAABCIEjYgAAAAAAlCNiENiWiV+=",
                    "threeDResult":"Y",
                    "threeDSecureVersion":"2.1.0",
                    "directoryServerTransactionId":"a3a721f3-b6fa-4cb5-84ea-c7b5c39890a2"
                },
                "profile": {
                    "firstName": "Joe",
                    "lastName": "Smith",
                    "email": "Joe.Smith@canada.com"
                },
                "billingDetails": {
                    "street": "100 Queen Street West",
                    "city": "Toronto",
                    "state": "ON",
                    "country": "CA",
                    "zip": "M5H 2N2"
                },
                "customerIp": "204.91.0.12",
                "description": "Video purchase"
            }


+ Response 200 (application/json)

    + Body

            {
                "id": "7573f618-2f63-45aa-ae96-8412206ca403",
                "merchantRefNum": "merchant 03.24.17_3",
                "txnTime": "2017-03-24T18:28:28Z",
                "status": "COMPLETED",
                "amount": 1000,
                "settleWithAuth": false,
                "availableToSettle": 1000,
                "card": {
                    "type": "VI",
                    "lastDigits": "1111",
                    "cardExpiry": {
                        "month": 2,
                        "year": 2019
                    }
                },
                "authentication": {
                    "eci":5,
                    "cavv":"AAABCIEjYgAAAAAAlCNiENiWiV+=",
                    "threeDResult":"Y",
                    "threeDSecureVersion":"2.1.0",
                    "directoryServerTransactionId":"a3a721f3-b6fa-4cb5-84ea-c7b5c39890a2"
                },                
                "authCode": "180796",
                "profile": {
                    "firstName": "Joe",
                    "lastName": "Smith",
                    "email": "Joe.Smith@canada.com"
                },
                "billingDetails": {
                    "street": "100 Queen Street West",
                    "city": "Toronto",
                    "state": "ON",
                    "country": "CA",
                    "zip": "M5H2N2"
                },
                "customerIp": "204.91.0.12",
                "description": "Video purchase",
                "currencyCode": "CAD",
                "avsResponse": "MATCH",
                "cvvVerification": "MATCH",
                "links": [
                    {
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/auths/7573f618-2f63-45aa-ae96-8412206ca403"
                    }
                ]
            }
+ Request Authorization with ignored airline travel details for AIRLINE merchants only (application/json)

        + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
              "merchantRefNum": "merchant 03.24.17_3",
              "amount": 100000,
              "settleWithAuth": false, //or missing as the default value is false
              "card": {
                "cardNum": "4111111111111111",
                "cardExpiry": {
                  "month": 12,
                  "year": 2021
                },
                "cvv": "123"
              },
              "profile": {
                "firstName": "Joe",
                "lastName": "Smith",
                "email": "Joe.Smith@canada.com"
              },
              "airlineTravelDetails": {
                "passengerName": "Joe Smith",
                "departureDate": "2021-01-26",
                "origin": "SXF",
                "computerizedReservationSystem": "DATS",
                "ticket": {
                    "ticketNumber": 1234567891011,
                    "isRestrictedTicket": false
                },
                "customerReferenceNumber": 10987654321,
                "travelAgency": {
                  "name": "MY AGENT",
                  "code": "MYAGENT347"
                },
                "tripLegs": {
                  "leg1": {
                    "flight": {
                      "carrierCode": "LH",
                      "flightNumber": "0799"
                    },
                    "serviceClass": "F",
                    "isStopOverAllowed": "true",
                    "destination": "ISL",
                    "fareBasis": "VMAY",
                    "departureDate": "2021-01-26"
                  },
                  "leg2": {
                    "flight": {
                      "carrierCode": "TK",
                      "flightNumber": "1385"
                    },
                    "serviceClass": "F",
                    "isStopOverAllowed": "true",
                    "destination": "SOF",
                    "fareBasis": "VMAY",
                    "departureDate": "2021-01-26"
                  }
                }
              }   
            }


+ Response 200 (application/json)

    + Body

            {
              "id": "6de3404d-6a32-472c-8470-ae79e8c8246b",
              "merchantRefNum": "merchant 03.24.17_3",
              "txnTime": "2019-12-03T09:25:36Z",
              "status": "COMPLETED",
              "amount": 100000,
              "settleWithAuth": false,
              "card": {
                "type": "VI",
                "lastDigits": "1111",
                "cardExpiry": {
                  "month": 12,
                  "year": 2021
                }
              },
              "authCode": "100945",
              "profile": {
                "firstName": "Joe",
                "lastName": "Smith",
                "email": "Joe.Smith@canada.com"
              },
              "currencyCode": "EUR"
            }

+ Request Submit an Authorization Including Settlement for AIRLINE merchants only (application/json)

        + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
              "merchantRefNum": "merchant 03.24.17_3",
              "amount": 100000,
              "settleWithAuth": true,
              "dupCheck": false,
              "card": {
                "cardNum": "4111111111111111",
                "cardExpiry": {
                  "month": 12,
                  "year": 2021
                },
                "cvv": "123"
              },
              "profile": {
                "firstName": "Joe",
                "lastName": "Smith",
                "email": "Joe.Smith@canada.com"
              },
              "billingDetails": {
                "street": "100 Queen Street West",
                "city": "Sofia",
                "country": "BG",
                "zip": "1000"
              },
              "customerIp": "204.91.0.12",
              "airlineTravelDetails": {
                "passengerName": "Joe Smith",
                "departureDate": "2021-01-26",
                "origin": "SXF",
                "computerizedReservationSystem": "DATS",
                "ticket": {
                    "ticketNumber": 1234567891011,
                    "isRestrictedTicket": false
                },
                "customerReferenceNumber": 10987654321,
                "travelAgency": {
                  "name": "MY AGENT",
                  "code": "MYAGENT347"
                },
                "tripLegs": {
                  "leg1": {
                    "flight": {
                      "carrierCode": "LH",
                      "flightNumber": "0799"
                    },
                    "serviceClass": "F",
                    "isStopOverAllowed": "true",
                    "destination": "ISL",
                    "fareBasis": "VMAY",
                    "departureDate": "2021-01-26"
                  },
                  "leg2": {
                    "flight": {
                      "carrierCode": "TK",
                      "flightNumber": "1385"
                    },
                    "serviceClass": "F",
                    "isStopOverAllowed": "true",
                    "destination": "SOF",
                    "fareBasis": "VMAY",
                    "departureDate": "2021-01-26"
                  }
                }
              }   
            }


+ Response 200 (application/json)

    + Body

            {
              "id": "6de3404d-6a32-472c-8470-ae79e8c8246b",
              "merchantRefNum": "merchant 03.24.17_3",
              "txnTime": "2019-12-03T09:25:36Z",
              "status": "COMPLETED",
              "amount": 100000,
              "settleWithAuth": true,
              "preAuth": false,
              "availableToSettle": 0,
              "card": {
                "type": "VI",
                "lastDigits": "1111",
                "cardExpiry": {
                  "month": 12,
                  "year": 2021
                }
              },
              "authCode": "100945",
              "profile": {
                "firstName": "Joe",
                "lastName": "Smith",
                "email": "Joe.Smith@canada.com"
              },
              "billingDetails": {
                "street": "100 Queen Street West",
                "city": "Sofia",
                "country": "BG",
                "zip": "1000"
              },
              "customerIp": "204.91.0.12",
              "currencyCode": "EUR",
              "settlements": [
                {
                  "id": "6de3404d-6a32-472c-8470-ae79e8c8246b",
                  "merchantRefNum": "merchant 03.24.17_3",
                  "txnTime": "2019-12-03T09:25:36Z",
                  "status": "PENDING",
                  "amount": 100000,
                  "availableToRefund": 100000,
                  "links": [
                    {
                      "rel": "self",
                      "href": "https://api.qa.com/cardpayments/v1/accounts/1012537630/settlements/6de3404d-6a32-472c-8470-ae79e8c8246b"
                    }
                  ],
                  "airlineTravelDetails": {
                    "passengerName": "Joe Smith",
                    "departureDate": "2021-01-26",
                    "origin": "SXF",
                    "computerizedReservationSystem": "DATS",
                    "ticket": {
                        "ticketNumber": 1234567891011,
                        "isRestrictedTicket": false
                    },
                    "customerReferenceNumber": 10987654321,
                    "travelAgency": {
                      "name": "MY AGENT",
                      "code": "MYAGENT347"
                    },
                    "tripLegs": {
                      "leg1": {
                        "flight": {
                          "carrierCode": "LH",
                          "flightNumber": "0799"
                        },
                        "serviceClass": "F",
                        "isStopOverAllowed": "true",
                        "destination": "ISL",
                        "fareBasis": "VMAY",
                        "departureDate": "2021-01-26"
                      },
                      "leg2": {
                        "flight": {
                          "carrierCode": "TK",
                          "flightNumber": "1385"
                        },
                        "serviceClass": "F",
                        "isStopOverAllowed": "true",
                        "destination": "SOF",
                        "fareBasis": "VMAY",
                        "departureDate": "2021-01-26"
                      }
                    }
                  }
                }
              ],
              "links": [
                {
                  "rel": "settlement",
                  "href": "https://api.qa.com/cardpayments/v1/accounts/1012537630/settlements/6de3404d-6a32-472c-8470-ae79e8c8246b"
                },
                {
                  "rel": "self",
                  "href": "https://api.qa.com/cardpayments/v1/accounts/1012537630/auths/6de3404d-6a32-472c-8470-ae79e8c8246b"
                }
              ]
            }


## Get Authorization [GET /v1/accounts/{account_id}/auths/{auth_id}]
<a name="getauth" title="Look Up an Authorization"></a>

Click on **Get Authorization** above to see how to look up an Authorization request using the ID returned in the response to the original request.

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.
    + auth_id:`5f2164fa-7141-40a9-b065-1426243970f1` (string, required) - This is the Authorization ID returned in the response.

+ Request Get Authorization (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

+ Response 200 (application/json)

    + Body

            {
                "id": "7573f618-2f63-45aa-ae96-8412206ca403",
                "merchantRefNum": "merchant 03.24.17_3",
                "txnTime": "2017-03-24T18:28:28Z",
                "status": "COMPLETED",
                "amount": 1000,
                "settleWithAuth": false,
                "availableToSettle": 1000,
                "card": {
                    "type": "VI",
                    "lastDigits": "1111",
                    "cardExpiry": {
                        "month": 2,
                        "year": 2019
                    }
                },
                "authCode": "180796",
                "profile": {
                    "firstName": "Joe",
                    "lastName": "Smith",
                    "email": "Joe.Smith@canada.com"
                },
                "billingDetails": {
                    "street": "100 Queen Street West",
                    "city": "Toronto",
                    "state": "ON",
                    "country": "CA",
                    "zip": "M5H2N2"
                },
                "customerIp": "204.91.0.12",
                "keywords": [
                    "REPEAT CUSTOMER",
                    "PROFILE"
                ],
                "description": "Video purchase",
                "currencyCode": "CAD",
                "avsResponse": "MATCH",
                "cvvVerification": "MATCH",
                "links": [
                    {
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/auths/7573f618-2f63-45aa-ae96-8412206ca403"
                    }
                ]
            }

## Get Authorization Using Merchant Reference Number [GET /v1/accounts/{account_id}/auths?merchantRefNum={merchantRefNum}&limit={limit}&offset={offset}&startDate={startDate}&endDate={endDate}]
<a name="getauthmerchantrefnum" title="Look Up an Authorization Using a Merchant Reference Number"></a>

Click on **Get Authorization Using Merchant Reference Number** above to see how to look up an Authorization request using the merchant reference number used in the original request.

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.    
    + merchantRefNum:`merchant-ABC-123` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request.
    + limit:2 (string, optional) - This is the total number of records to return. Default value is 10. Max value is 50.
    + offset:0 (string, optional) - This is the starting position, where 0 is the first record. Default = 0.
    + startDate:`2017-01-14T15:12:18Z` - This is the start date in UTC. Default = 30 days before the *endDate*.
    + endDate:`2017-04-04T15:12:18Z` - This is the end date in UTC. Default = current date and time.

+ Request Get Authorization Using Merchant Reference Number (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

+ Response 200 (application/json)

    + Body

             {
                 "auths": [{
                     "id": "7573f618-2f63-45aa-ae96-8412206ca403",
                     "merchantRefNum": "merchant 03.24.17_3",
                     "txnTime": "2017-03-24T18:28:28Z",
                     "status": "COMPLETED",
                     "amount": 1000,
                     "settleWithAuth": false,
                     "availableToSettle": 1000,
                     "card": {
                         "type": "VI",
                         "lastDigits": "1111",
                         "cardExpiry": {
                             "month": 2,
                             "year": 2019
                         }
                     },
                     "authCode": "180796",
                     "profile": {
                         "firstName": "Joe",
                         "lastName": "Smith",
                         "email": "Joe.Smith@canada.com"
                     },
                     "billingDetails": {
                         "street": "100 Queen Street West",
                         "city": "Toronto",
                         "state": "ON",
                         "country": "CA",
                         "zip": "M5H2N2"
                     },
                     "customerIp": "204.91.0.12",
                     "keywords": [
                         "REPEAT CUSTOMER",
                         "PROFILE"
                     ],
                     "description": "Video purchase",
                     "currencyCode": "CAD",
                     "avsResponse": "MATCH",
                     "cvvVerification": "MATCH",
                     "links": [{
                         "rel": "self",
                         "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/auths/7573f618-2f63-45aa-ae96-8412206ca403"
                     }]
                 }],
                 "links": [{
                         "rel": "self",
                         "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/auths/7573f618-2f63-45aa-ae96-8412206ca403"
                     }
                 ]
             }           

## Complete an Authorization [PUT /v1/accounts/{account_id}/auths/{auth_id}]
<a name="completeauth" title="Complete an Authorization"></a>

Click on **Complete an Authorization** above to see how to complete an Authorization request with the status of Held.

+ Parameters
    + account_id:123456789 (string, required) - This is the merchant account number.
    + auth_id:`5f2164fa-7141-40a9-b065-1426243970f1` (string, required) - This is the Authorization ID returned in the response.

+ Request Complete Authorization (application/json)

    + Attributes
        + status:COMPLETED (enum, required) - This is the status to which you want to change the Authorization (COMPLETED or CANCELLED).

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

+ Response 200 (application/json)

    + Body

            {
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/auths/5f2164fa-7141-40a9-b065-1426243970f1"
                }],
                "id": "d1fb46ee-2736-4ef5-a724-f263ace75373",
                "amount": 10098,
                "txnTime": "2017-02-14T15:12:18Z",
                "status": "PENDING",
                "settleWithAuth": false,
                "availableToSettle": 10098
            }

# Void Authorizations [/voidauths]
<a name="voidauths" title="Void Authorizations"></a>

## Void an Authorization [POST /v1/accounts/{account_id}/auths/{auth_id}/voidauths]
<a name="voidanauth" title="Void an Authorization"></a>

Click on **Void an Authorization** above to see how to submit a Void Authorization request. You can void an Authorization **only if** it has not yet been settled. 

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number. 
    + auth_id:`ef8e4da6-68c1-40fb-ba43-d735148b1a7f` (string, required) - This is the Authorization ID returned in the response.

+ Attributes
    + Include Void Authorization
    + Include Links Auth Void

+ Request Void Authorization (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
                "merchantRefNum": "merchant ABC-123-voidauths",
                "amount": 898,
                "dupCheck": true
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "d1fb46ee-2736-4ef5-a724-f263ace75373",
                "merchantRefNum": "merchant ABC-123-voidauths",
                "amount": 898,
                "dupCheck": true,
                "txnTime": "2017-02-14T15:12:18Z",
                "status": "COMPLETED",
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/voidauths/d1fb46ee-2736-4ef5-a724-f263ace75373"
                }]
            }

## Get Void Authorization [GET /v1/accounts/{account_id}/voidauths/{void_auth_id}]
<a name="getvoidauth" title="Look Up a Void Authorization"></a>

Click on **Get Void Authorization** above to see how to look up a Void Authorization request using the ID returned in the response to the original request.

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.
    + void_auth_id:`d1fb46ee-2736-4ef5-a724-f263ace75373e` (string, required) - This is the ID returned in the response to the Void Authorization request. 

+ Request Get Void Authorization (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

+ Response 200 (application/json)

    + Body

            {
                "id": "d1fb46ee-2736-4ef5-a724-f263ace75373",
                "merchantRefNum": "merchant ABC-123-voidauths",
                "amount": 898,
                "dupCheck": true,
                "txnTime": "2017-02-14T15:12:18Z",
                "status": "COMPLETED",
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/voidauths/d1fb46ee-2736-4ef5-a724-f263ace75373"
                }]
            }

## Get Void Authorization Using Merchant Reference Number [GET /v1/accounts/{account_id}/voidauths?merchantRefNum={merchantRefNum}&limit={limit}&offset={offset}&startDate={startDate}&endDate={endDate}]
<a name="getvoidauthmerchantrefnum" title="Look Up a Void Authorization Using a Merchant Reference Number"></a>

Click on **Get Void Authorization Using Merchant Reference Number** above to see how to look up a Void Authorization request using the merchant reference number used in the original request.

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.
    + merchantRefNum:`merchant ABC-123-voidauths` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request.
    + limit:2 (string, optional) - This is the total number of records to return. Default value is 10. Max value is 50.
    + offset:0 (string, optional) - This is the starting position, where 0 is the first record. Default = 0.
    + startDate:`2017-01-14T15:12:18Z` - This is the start date in UTC. Default = 30 days before the *endDate*.
    + endDate:`2017-04-04T15:12:18Z` - This is the end date in UTC. Default = current date and time.

+ Request Get Void Authorization Using Merchant Reference Number (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

+ Response 200 (application/json)

    + Body

            {
                "voidauths": [{
                    "id": "d1fb46ee-2736-4ef5-a724-f263ace75373",
                    "merchantRefNum": "merchant ABC-123-voidauths",
                    "amount": 898,
                    "dupCheck": true,
                    "txnTime": "2017-02-14T15:12:18Z",
                    "status": "COMPLETED",
                "links": [{
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/voidauths?merchantRefNum=merchant-ABC-123&limit=2&offset=2&startDate=2017-01-14T15:12:18Z&endDate=2017-04-04T15:12:18Z"
                    }
                ]
                }],
                "links": [{
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/voidauths/d1fb46ee-2736-4ef5-a724-f263ace75373"
                    }]
            }

# Settlements [/settlements]
<a name="settlements" title="Settlements"></a>

## Settlement [POST /v1/accounts/{account_id}/auths/{auth_id}/settlements]
<a name="settlementrequest" title="Settlement Request"></a>

Click on **Settlement** above to see three examples of a Settlement request:

* A regular Settlement, where the initial request was an Authorization that now has to be settled
* A partial Settlement, where only part of the initial Authorization is settled, leaving the balance to be settled later
* A Settlement that is split into multiple merchant accounts, for merchant accounts that are configured to do so
* A Regular Settlement for the authorization with the full airline travel details for the AIRLINE Merchants

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.
    + auth_id:`e3058030-1a0c-4b8a-b7f7-ceb79157df3f` (string, required) - This is the ID returned in the response to the Authorization request.

+ Attributes
    + Include Settlement
    + Include Splitpay
    + Include Links Settlement
    +  Include airlineTravelDetails

+ Request Process a Settlement (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
                "merchantRefNum": "merchantRef_2016_04_11_05",
                "dupCheck": true
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "d1fb46ee-2736-4ef5-a724-f263ace75373",
                "merchantRefNum": "merchantRef_2016_04_11_05",
                "amount": 5500,
                "availableToRefund": 5500,
                "dupCheck": true,
                "txnTime": "2017-02-14T15:12:18Z",
                "status": "COMPLETED",
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/settlements/d1fb46ee-2736-4ef5-a724-f263ace75373"
                }]
            }

+ Request Process a Partial Settlement (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
                "merchantRefNum": "merchantRef_2016_04_11_05",
                "amount": 2250,
                "dupCheck": true
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "d1fb46ee-2736-4ef5-a724-f263ace75373",
                "merchantRefNum": "merchantRef_2016_04_11_05",
                "amount": 2250,
                "availableToRefund": 2250,
                "dupCheck": true,
                "txnTime": "2017-02-14T15:12:18Z",
                "status": "COMPLETED",
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/settlements/d1fb46ee-2736-4ef5-a724-f263ace75373"
                }]
            }

+ Request Process a Settlement with Split Payouts (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
                "merchantRefNum": "merchantRef_2016_04_11_05",
                "dupCheck": true,
                "splitpay": [{
                    "linkedAccount": "123124124",
                    "amount": 500
                }]
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "d1fb46ee-2736-4ef5-a724-f263ace75373",
                "merchantRefNum": "merchantRef_2016_04_11_05",
                "amount": 5500,
                "availableToRefund": 5500,
                "dupCheck": true,
                "txnTime": "2017-02-14T15:12:18Z",
                "status": "COMPLETED",
                "splitpay": [{
                    "linkedAccount": "123124124",
                    "amount": 500
                }],
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/settlements/d1fb46ee-2736-4ef5-a724-f263ace75373"
                }]
            }

+ Request Settlement for AIRLINE Merchants (application/json)
    
    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
              "merchantRefNum": "merchantRef_2019_04_11_05",
              "dupCheck": true,
              "airlineTravelDetails": {
                "passengerName": "Joe Smith",
                "departureDate": "2021-01-26",
                "origin": "SXF",
                "computerizedReservationSystem": "DATS",
                "ticket": {
                    "ticketNumber": 1234567891011,
                    "isRestrictedTicket": false
                },
                "customerReferenceNumber": 10987654321,
                "travelAgency": {
                  "name": "MY AGENT",
                  "code": "MYAGENT347"
                },
                "tripLegs": {
                  "leg1": {
                    "flight": {
                      "carrierCode": "LH",
                      "flightNumber": "0799"
                    },
                    "serviceClass": "F",
                    "isStopOverAllowed": "true",
                    "destination": "ISL",
                    "fareBasis": "VMAY",
                    "departureDate": "2021-01-26"
                  },
                  "leg2": {
                    "flight": {
                      "carrierCode": "TK",
                      "flightNumber": "1385"
                    },
                    "serviceClass": "F",
                    "isStopOverAllowed": "true",
                    "destination": "SOF",
                    "fareBasis": "VMAY",
                    "departureDate": "2021-01-26"
                  }
                }
              }   
            }

+ Response 200 (application/json)

    + Body

            {
             "id": "d1fb46ee-2736-4ef5-a724-f263ace75373",
              "merchantRefNum": "merchantRef_2019_04_11_05",
              "amount": 100000,
              "availableToRefund": 100000,
              "dupCheck": true,
              "txnTime": "2019-12-03T09:25:36Z",
              "status": "PENDING",
              "airlineTravelDetails": {
                "passengerName": "Joe Smith",
                "departureDate": "2021-01-26",
                "origin": "SXF",
                "computerizedReservationSystem": "DATS",
                "ticket": {
                    "ticketNumber": 1234567891011,
                    "isRestrictedTicket": false
                },
                "customerReferenceNumber": 10987654321,
                "travelAgency": {
                  "name": "MY AGENT",
                  "code": "MYAGENT347"
                },
                "tripLegs": {
                  "leg1": {
                    "flight": {
                      "carrierCode": "LH",
                      "flightNumber": "0799"
                    },
                    "serviceClass": "F",
                    "isStopOverAllowed": "true",
                    "destination": "ISL",
                    "fareBasis": "VMAY",
                    "departureDate": "2021-01-26"
                  },
                  "leg2": {
                    "flight": {
                      "carrierCode": "TK",
                      "flightNumber": "1385"
                    },
                    "serviceClass": "F",
                    "isStopOverAllowed": "true",
                    "destination": "SOF",
                    "fareBasis": "VMAY",
                    "departureDate": "2021-01-26"
                  }
                }
              }   
              "links": [
                {
                  "rel": "self",
                  "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/settlements/d1fb46ee-2736-4ef5-a724-f263ace75373"
                }
              ]
            }



## Cancel a Settlement [PUT /v1/accounts/{account_id}/settlements/{settlement_id}]
<a name="cancelsettlement" title="Cancel a Settlement"></a>

Click on **Cancel a Settlement** above to see how to submit a Cancel Settlement request.

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.
    + settlement_id:`d1fb46ee-2736-4ef5-a724-f263ace75373` (string, required) -  This is the ID returned in the response to the Settlement request.

+ Request Cancel Settlement (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
                "status": "CANCELLED"
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "d1fb46ee-2736-4ef5-a724-f263ace75373",
                "txnTime": "2017-02-14T15:12:18Z",
                "status": "CANCELLED",
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/settlements/d1fb46ee-2736-4ef5-a724-f263ace75373"
                }]
            }

## Get Settlement [GET /v1/accounts/{account_id}/settlements/{settlement_id}]
<a name="getsettlement" title="Look Up a Settlement"></a>

Click on **Get Settlement** above to see how to look up a Settlement request using the ID returned in the response to the original request.

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.
    + settlement_id:`d1fb46ee-2736-4ef5-a724-f263ace75373` (string, required) - This is the Settlement ID returned in the response.

+ Request Get Settlement (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

+ Response 200 (application/json)

    + Body

            {
                "id": "d1fb46ee-2736-4ef5-a724-f263ace75373",
                "merchantRefNum": "merchantRef_2016_04_11_05",
                "amount": 5500,
                "availableToRefund": 2225,
                "dupCheck": true,
                "txnTime": "2017-02-14T15:12:18Z",
                "status": "COMPLETED",
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/settlements/d1fb46ee-2736-4ef5-a724-f263ace75373"
                }]
            }

## Get Settlement Using Merchant Reference Number [GET /v1/accounts/{account_id}/settlements?merchantRefNum={merchantRefNum}&limit={limit}&offset={offset}&startDate={startDate}&endDate={endDate}]
<a name="getsettlementmerchantrefnum" title="Look Up a Settlement Using a Merchant Reference Number"></a>

Click on **Get Settlement Using Merchant Reference Number** above to see how to look up a Settlement using the merchant reference number used in the original request.

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.
    + merchantRefNum:`merchant-ABC-123` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request.
    + limit:2 (string, optional) - This is the total number of records to return. Default value is 10. Max value is 50.
    + offset:0 (string, optional) - This is the starting position, where 0 is the first record. Default = 0.
    + startDate:`2017-01-14T15:12:18Z` - This is the start date in UTC. Default = 30 days before the *endDate*.
    + endDate:`2017-04-04T15:12:18Z` - This is the end date in UTC. Default = current date and time.

+ Request Get Settlement Using Merchant Reference Number (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

+ Response 200 (application/json)

    + Body

            {
                "settlements": [{
                    "links": [{
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/99000/settlements/d1fb46ee-2736-4ef5-a724-f263ace75373"
                    }],
                    "id": "d1fb46ee-2736-4ef5-a724-f263ace75373",
                    "merchantRefNum": "merchant-ABC-123",
                    "amount": 50,
                    "availableToRefund": 25,
                    "dupCheck": true,
                    "txnTime": "2017-02-14T15:12:18Z",
                    "status": "COMPLETED",
                    "splitpay": [{
                        "linkedAccount": "123124124",
                        "amount": 505
                    }]
                }],
                "links": [{
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/settlements?merchantRefNum=merchant-ABC-123&limit=2&offset=2&startDate=2017-01-14T15:12:18Z&endDate=2017-04-04T15:12:18Z"
                    }
                ]
            }


# Refunds [/refunds]
<a name="refunds" title="Refunds"></a>

## Refund [POST /v1/accounts/{account_id}/settlements/{settlement_id}/refunds]
<a name="refund request" title="Refund Request"></a>

Click on **Refund** above to see two examples of a Refund request:

* A regular Refund
* A Refund that is split into multiple merchant accounts, for merchant accounts that are configured to do so
* A refund with automatic [Purchase Return Authorization](#purchaseReturnAuthorization) for acquireres/processors that support it.

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.
    + settlement_id:`6ddbc05a-ff40-4dc1-b2d3-f200934dfdde` (string, required) -  This is the ID returned in the response to the Settlement request.

+ Attributes
    + Include  Refund
    + Include Links Refund        

+ Request Process a Refund (application/json)


    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
                "merchantRefNum": "merchantRef_2016_04_11_05",
                "amount": 5500,
                "dupCheck": true
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "d1fb46ee-2736-4ef5-a724-f263ace75374",
                "merchantRefNum": "merchantRef_2016_04_11_05",
                "amount": 5500,
                "dupCheck": true,
                "txnTime": "2017-02-14T15:12:18Z",
                "status": "COMPLETED",
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/refunds/d1fb46ee-2736-4ef5-a724-f263ace75374"
                }]
            }

+ Request Process a Refund with Split Payouts (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
                "merchantRefNum": "merchantRef_2016_04_11_05",
                "amount": 5500,
                "dupCheck": true,
                "splitpay": [{
                    "linkedAccount": "123124124",
                    "amount": 500
                }]
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "d1fb46ee-2736-4ef5-a724-f263ace75374",
                "merchantRefNum": "merchantRef_2016_04_11_05",
                "amount": 5500,
                "dupCheck": true,
                "txnTime": "2017-02-14T15:12:18Z",
                "status": "COMPLETED",
                "splitpay": [{
                    "linkedAccount": "123124124",
                    "amount": 500
                }],
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/refunds/d1fb46ee-2736-4ef5-a724-f263ace75374"
                }]
            }

+ Request Process a Refund with Purchase Return Authorization (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
               {
              "merchantRefNum": "merchantRef_2016_04_11_05",
              "amount": 5500,
              "dupCheck": true
            }
            }

+ Response 200 (application/json)

    + Body

             {
              "id": "d1fb46ee-2736-4ef5-a724-f263ace75374",
              "merchantRefNum": "merchantRef_2016_04_11_05",
              "amount": 5500,
              "dupCheck": true,
              "txnTime": "2017-02-14T15:12:18Z",
              "purchaseReturnAuthorization": {
                "id": "d1fb46ee-2736-4ef5-a724-f263ace75374",
                "merchantRefNum": "merchantRef_2016_04_11_05",
                "txnTime": "2017-02-14T15:12:18Z",
                "authCode": "120072",
                "amount": 5500,
                "currencyCode": "USD"
              }
              "status": "COMPLETED",
              "links": [
                {
                  "rel": "self",
                  "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/refunds/d1fb46ee-2736-4ef5-a724-f263ace75374"
                }
              ]
            }

## Cancel a Refund [PUT /v1/accounts/{account_id}/refunds/{refund_id}]
<a name="cancelrefund" title="Cancel a Refund"></a>

Click on **Cancel a Refund** above to see how to submit a Cancel Refund request.

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.
    + refund_id:`d1fb46ee-2736-4ef5-a724-f263ace75374` (string, required) - This is the ID returned in the response to the Refund request.

+ Request Cancel Refund (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
                "status": "CANCELLED"
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "d1fb46ee-2736-4ef5-a724-f263ace75374",
                "txnTime": "2017-02-14T15:12:18Z",
                "status": "CANCELLED",
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/refunds/d1fb46ee-2736-4ef5-a724-f263ace75374"
                }]
            }

## Get Refund [GET /v1/accounts/{account_id}/refunds/{refund_id}]
<a name="getrefund" title="Look Up a Refund"></a>

Click on **Get Refund** above to see how to look up a Refund request using the ID returned in the response to the original request.

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.
    + refund_id:`d1fb46ee-2736-4ef5-a724-f263ace75374` (string, required) - This is the Refund ID returned in the response.

+ Request Get Refund (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

+ Response 200 (application/json)

    + Body

            {
                "id": "d1fb46ee-2736-4ef5-a724-f263ace75374",
                "merchantRefNum": "merchantRef_2016_04_11_05",
                "amount": 5500,
                "dupCheck": true,
                "txnTime": "2017-02-14T15:12:18Z",
                "status": "PENDING",
                "splitpay": [{
                    "linkedAccount": "123124124",
                    "amount": 500
                }],
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/refunds/d1fb46ee-2736-4ef5-a724-f263ace75374"
                }]
            }

## Get Refund Using Merchant Reference Number [GET /v1/accounts/{account_id}/refunds?merchantRefNum={merchantRefNum}&limit={limit}&offset={offset}&startDate={startDate}&endDate={endDate}]
<a name="getrefundmerchantrefnum" title="Look Up a Refund Using a Merchant Reference Number"></a>

Click on **Get Refund Using Merchant Reference Number** above to see how to look up a Refund using the merchant reference number used in the original request.

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.
    + merchantRefNum:`merchant-ABC-123` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request.
    + limit:2 (string, optional) - This is the total number of records to return. Default value is 10. Max value is 50.
    + offset:0 (string, optional) - This is the starting position, where 0 is the first record. Default = 0.
    + startDate:`2017-01-14T15:12:18Z` - This is the start date in UTC. Default = 30 days before the *endDate*.
    + endDate:`2017-04-04T15:12:18Z` - This is the end date in UTC. Default = current date and time.

+ Request Get Refund Using Merchant Reference Number (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

+ Response 200 (application/json)

    + Body

            {
                "refunds": [{
                    "links": [{
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/99000/refunds/d1fb46ee-2736-4ef5-a724-f263ace75374"
                    }],
                    "id": "d1fb46ee-2736-4ef5-a724-f263ace75374",
                    "merchantRefNum": "merchant-ABC-123",
                    "amount": 50,
                    "dupCheck": true,
                    "txnTime": "2017-02-14T15:12:18Z",
                    "status": "COMPLETED",
                    "splitpay": [{
                        "linkedAccount": "123124124",
                        "amount": 505
                    }]
                }],
                "links": [{
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/refunds?merchantRefNum=merchant-ABC-123&limit=2&offset=2&startDate=2017-01-14T15:12:18Z&endDate=2017-04-04T15:12:18Z"
                    }
                ]
            }

# Verifications [/verifications]
<a name="verifications" title="Verifications"></a>

## Verification [POST /v1/accounts/{account_id}/verifications]
<a name="verificationrequest" title="Verification Request"></a>

Click on **Verification** above to see two examples of a Verification request to verify card details:

* A Verification request using card details
* A Verification request using a payment token

In the case of a payment token, you can use either of two payment token types:

* The permanent, reusable payment token that you receive in the response to a Customer Vault [card creation request](https://developer.paysafe.com/en/payments/vault/api/#/reference/0/cards/create-a-card)
* The temporary payment token that you receive in the response to a Customer Vault [mobile single-use token creation request](https://developer.paysafe.com/en/payments/vault/api/#/reference/0/mobile-device-single-use-tokens/create-a-mobile-device-single-use-token) or when using the [Paysafe.js SDK](https://developer.paysafe.com/en/sdks/paysafejs/tokenize/)

You **cannot** use [Apple Pay single-use tokens](https://developer.paysafe.com/en/vault/api/#/reference/single-use-tokens/apple-pay-single-use-tokens/create-an-apple-pay-single-use-token) or [Google Pay single-use tokens](https://developer.paysafe.com/en/vault/api/#/reference/single-use-tokens/google-payment-api-single-use-tokens/create-a-google-payment-api-single-use-token) in Verification requests.

**Note**<ul><li>If you use a payment token that **does not** have an address associated with it, you must include the *billingDetails* object in this request in order to pass an Address Verification (AVS) check.</li><li>If you use a payment token that **does** have an address associated with it and you include the *billingDetails* object, the address information included in the *billingDetails* object will override the address information associated with the payment token, for this transaction request only.</li><li>If you intend to use the Customer Vault API to [convert a single-use payment token into a permanent payment token](https://developer.paysafe.com/en/payments/vault/api/#/reference/0/profiles/create-a-profile-using-a-single-use-token), you should verify the token using this Card Payments API request before proceeding with the conversion.</li></ul>

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.

+ Attributes

    + Include Verification
    + Include Links Verification

+ Request Submit a Verification Request (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
                "card": {
                    "cardNum": "4111111111111111",
                    "cardExpiry": {
                        "month": 12,
                        "year": 2020
                    },
                    "cvv": "123"
                },
                "merchantRefNum": "merchant ABC-444",
                "profile": {
                    "firstName": "John",
                    "lastName": "Smith",
                    "email": "jsmith@email.com"
                },
                "billingDetails": {
                    "street": "100 Queen Street West",
                    "city": "Toronto",
                    "state": "ON",
                    "country": "CA",
                    "zip": "M5H 2N2",
                    "phone": "555"
                },
                "customerIp": "204.91.0.12",
                "dupCheck": true,
                "description": "This is a Verification transaction."
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "e50e19a6-8edd-44ec-abc4-18d0a97d51d8",
                "merchantRefNum": "merchant ABC-444",
                "profile": {
                    "profile": {
                        "firstName": "John",
                        "lastName": "Smith",
                        "email": "jsmith@email.com"
                    }
                },
                "billingDetails": {
                    "billingDetails": {
                        "street": "100 Queen Street West",
                        "city": "Toronto",
                        "state": "ON",
                        "country": "CA",
                        "zip": "M5H 2N2",
                        "phone": "555"
                    }
                },
                "customerIp": "204.91.0.12",
                "dupCheck": true,
                "description": "This is a Verification transaction.",
                "card": {
                    "type": "VI",
                    "lastDigits": 1111,
                    "cardExpiry": {
                        "month": 12,
                        "year": 2020
                    }
                },
                "authCode": "1234567890",
                "txnTime": "2017-02-14T15:12:18Z",
                "currencyCode": "USD",
                "avsResponse": "MATCH",
                "cvvVerification": "MATCH",
                "status": "COMPLETED",
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/verifications/e50e19a6-8edd-44ec-abc4-18d0a97d51d8"
                }]
            }

+ Request Submit a Verification Request Using a Payment Token (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
                "card": {
                    "paymentToken": "LTEyMzYzMjQ3ODg"
                },
                "merchantRefNum": "merchant ABC-444",
                "customerIp": "204.91.0.12",
                "dupCheck": true,
                "description": "This is a Verification transaction."
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "e50e19a6-8edd-44ec-abc4-18d0a97d51d8",
                "merchantRefNum": "merchant ABC-444",
                "profile": {
                    "profile": {
                        "firstName": "John",
                        "lastName": "Smith",
                        "email": "jsmith@email.com"
                    }
                },
                "billingDetails": {
                    "billingDetails": {
                        "street": "100 Queen Street West",
                        "city": "Toronto",
                        "state": "ON",
                        "country": "CA",
                        "zip": "M5H 2N2",
                        "phone": "555"
                    }
                },
                "customerIp": "204.91.0.12",
                "dupCheck": true,
                "description": "This is a Verification transaction.",
                "card": {
                    "type": "VI",
                    "lastDigits": 1111,
                    "cardExpiry": {
                        "month": 12,
                        "year": 2020
                    }
                },
                "authCode": "1234567890",
                "txnTime": "2017-02-14T15:12:18Z",
                "currencyCode": "USD",
                "avsResponse": "MATCH",
                "cvvVerification": "MATCH",
                "status": "COMPLETED",
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/verifications/e50e19a6-8edd-44ec-abc4-18d0a97d51d8"
                }]
            }

## Get Verification [GET /v1/accounts/{account_id}/verifications/{verification_id}]
<a name="getverification" title="Look Up a Verification"></a>

Click on **Get Verification** above to see how to look up a Verification request using the ID returned in the response to the original request.

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.
    + verification_id:`e50e19a6-8edd-44ec-abc4-18d0a97d51d8` (string, required) - This is the Verification ID returned in the response.

+ Request Get Verification (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

+ Response 200 (application/json)

    + Body

            {
                "id": "e50e19a6-8edd-44ec-abc4-18d0a97d51d8",
                "merchantRefNum": "merchant ABC-444",
                "profile": {
                    "profile": {
                        "firstName": "John",
                        "lastName": "Smith",
                        "email": "jsmith@email.com"
                    }
                },
                "billingDetails": {
                    "billingDetails": {
                        "street": "100 Queen Street West",
                        "city": "Toronto",
                        "state": "ON",
                        "country": "CA",
                        "zip": "M5H 2N2",
                        "phone": "555"
                    }
                },
                "customerIp": "204.91.0.12",
                "dupCheck": true,
                "description": "This is a Verification transaction.",
                "card": {
                    "type": "VI",
                    "lastDigits": 1111,
                    "cardExpiry": {
                        "month": 12,
                        "year": 2020
                    }
                },
                "authCode": "1234567890",
                "txnTime": "2017-02-14T15:12:18Z",
                "currencyCode": "USD",
                "avsResponse": "MATCH",
                "cvvVerification": "MATCH",
                "status": "COMPLETED",
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/verifications/e50e19a6-8edd-44ec-abc4-18d0a97d51d8"
                }]
            }

## Get Verification Using Merchant Reference Number [GET /v1/accounts/{account_id}/verifications?merchantRefNum={merchantRefNum}&limit={limit}&offset={offset}&startDate={startDate}&endDate={endDate}]
<a name="getverificationmerchantrefnum" title="Look Up a Verification Using a Merchant Reference Number"></a>

Click on **Get Verification Using Merchant Reference Number** above to see how to look up a Verification request using the merchant reference number used in the original request.

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.
    + merchantRefNum:`merchant-ABC-123` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request.
    + limit:2 (string, optional) - This is the total number of records to return. Default value is 10. Max value is 50.
    + offset:0 (string, optional) - This is the starting position, where 0 is the first record. Default = 0.
    + startDate:`2017-01-14T15:12:18Z` - This is the start date in UTC. Default = 30 days before the *endDate*.
    + endDate:`2017-04-04T15:12:18Z` - This is the end date in UTC. Default = current date and time.

+ Request Get Verification Using Merchant Reference Number (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

+ Response 200 (application/json)

    + Body

            {
               "verifications": [{
                    "id": "e50e19a6-8edd-44ec-abc4-18d0a97d51d8",
                    "merchantRefNum": "merchant ABC-123",
                    "profile": {
                        "profile": {
                            "firstName": "John",
                            "lastName": "Smith",
                            "email": "jsmith@email.com"
                        }
                    },
                    "billingDetails": {
                        "billingDetails": {
                            "street": "100 Queen Street West",
                            "city": "Toronto",
                            "state": "ON",
                            "country": "CA",
                            "zip": "M5H 2N2",
                            "phone": "555"
                        }
                    },
                    "customerIp": "204.91.0.12",
                    "dupCheck": true,
                    "description": "This is a Verification transaction.",
                    "card": {
                        "type": "VI",
                        "lastDigits": 1111,
                        "cardExpiry": {
                            "month": 12,
                            "year": 2020
                        }
                    },
                    "authCode": "1234567890",
                    "txnTime": "2017-02-14T15:12:18Z",
                    "currencyCode": "USD",
                    "avsResponse": "MATCH",
                    "cvvVerification": "MATCH",
                    "status": "COMPLETED",
                    "links": [{
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/verifications/e50e19a6-8edd-44ec-abc4-18d0a97d51d8"
                    }]
                }],
                 "links": [{
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/verifications?merchantRefNum=merchant-ABC-123&limit=2&offset=2&startDate=2017-01-14T15:12:18Z&endDate=2017-04-04T15:12:18Z"
                    }
                ]
            }

# Original Credits [/originalcredits]
<a name="originalcredits" title="Original Credits"></a>

Original Credits allow merchants with specific merchant category codes (MCCs) to issue winnings as credits to cardholders, without requiring a previous Authorization/Settlement. 

**Note:** Acquirers and processors do not necessarily support all available MCCs; before integrating, you should contact [Integration Support](https://developer.paysafe.com/en/resources-and-support/contact-us/) for details.

Worldpay Inc. (formerly Vantiv) supports Original Credit transactions with the following MCCs:
 * 5816
 * 7800
 * 7801
 * 7802
 * 7994

Original Credit transfers are supported for non-Worldpay Inc. merchants with the following MCCs:
 * 7994
 * 7995

By default, Test accounts do not support Original Credits; if you wish to use them you should contact [Integration Support](https://developer.paysafe.com/en/resources-and-support/contact-us/).

## Original Credit [POST /v1/accounts/{account_id}/originalcredits]
<a name="originalcreditrequest" title="Original Credit Request"></a>

Click on **Original Credit** above to see two examples of an Original Credit request:

* An Original Credit request using card information
* An Original Credit request using a payment token

In the case of a payment token, you can use either of two payment token types:

* The permanent, reusable payment token that you receive in the response to a Customer Vault [card creation request](https://developer.paysafe.com/en/payments/vault/api/#/reference/0/cards/create-a-card)
* The temporary payment token that you receive in the response to a Customer Vault [mobile single-use token creation request](https://developer.paysafe.com/en/payments/vault/api/#/reference/0/mobile-device-single-use-tokens/create-a-mobile-device-single-use-token) or when using the [Paysafe.js SDK](https://developer.paysafe.com/en/sdks/paysafejs/tokenize/)

You **cannot** use [Apple Pay single-use tokens](https://developer.paysafe.com/en/vault/api/#/reference/single-use-tokens/apple-pay-single-use-tokens/create-an-apple-pay-single-use-token) or [Google Pay single-use tokens](https://developer.paysafe.com/en/vault/api/#/reference/single-use-tokens/google-payment-api-single-use-tokens/create-a-google-payment-api-single-use-token) in Original Credit requests.

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.

+ Attributes
    + Include Original Credit
    + Include Links Original Credit

+ Request Submit an Original Credit (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
                "merchantRefNum": "merchant 07.05.17_16",
                "amount": 1000,
                "dupCheck": "true",
                "card": {
                    "cardNum": "4111111111111111",
                    "cardExpiry": {
                        "month": 2,
                        "year": 2019
                    }
                },
                "customerIp": "204.91.0.12",
                "description": "Winning payment from Loto"
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "86dcb68d-cbd0-4878-8da7-ffc0e6554513",
                "merchantRefNum": "merchant 07.05.17_16",
                "txnTime": "2017-07-06T19:59:17Z",
                "status": "PENDING",
                "amount": 1000,
                "card": {
                    "type": "VI",
                    "lastDigits": "1111",
                    "cardExpiry": {
                        "month": 2,
                        "year": 2019
                    }
                },
                "profile": {
                    "firstName": "Joe",
                    "lastName": "Smith",
                    "email": "Joe.Smith@canada.com"
                },
                "billingDetails": {
                    "street": "100 Queen Street West",
                    "city": "Toronto",
                    "state": "ON",
                    "country": "CA",
                    "zip": "M5H2N2"
                },
                "customerIp": "204.91.0.12",
                "description": "Winning payment from Loto",
                "currencyCode": "CAD",
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/originalcredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513"
                }]
            
            }

+ Request Submit an Original Credit Request Using a Payment Token (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY
    
    + Body

            {
                "merchantRefNum": "merchant 07.05.17_16",
                "amount": 1000,
                "dupCheck": "true",
                "card": {
                    "paymentToken": "LTEyMzYzMjQ3ODg"
                },
                "customerIp": "204.91.0.12",
                "description": "Winning payment from Loto"
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "86dcb68d-cbd0-4878-8da7-ffc0e6554513",
                "merchantRefNum": "merchant 07.05.17_16",
                "txnTime": "2017-07-06T19:59:17Z",
                "status": "PENDING",
                "amount": 1000,
                "card": {
                    "type": "VI",
                    "lastDigits": "1111",
                    "cardExpiry": {
                        "month": 2,
                        "year": 2019
                    }
                },
                "profile": {
                    "firstName": "Joe",
                    "lastName": "Smith",
                    "email": "Joe.Smith@canada.com"
                },
                "billingDetails": {
                    "street": "100 Queen Street West",
                    "city": "Toronto",
                    "state": "ON",
                    "country": "CA",
                    "zip": "M5H2N2"
                },
                "customerIp": "204.91.0.12",
                "description": "Winning payment from Loto",
                "currencyCode": "CAD",
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/originalcredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513"
                }]
            
            }


## Cancel an Original Credit [PUT /v1/accounts/{account_id}/originalcredits/{original_credit_id}]
<a name="canceloriginalcredit" title="Cancel an Original Credit"></a>

Click on **Cancel an Original Credit** above to see how to submit a Cancel Original Credit request.

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.
    + original_credit_id:`86dcb68d-cbd0-4878-8da7-ffc0e6554513` (string, required) - This is the ID returned in the response to the Original Credit request.

+ Request Cancel an Original Credit (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY
    
    + Body

            {
                "status": "CANCELLED"
            }    

+ Response 200 (application/json)

    + Body

            {
                "id": "86dcb68d-cbd0-4878-8da7-ffc0e6554513",
                "txnTime": "2017-02-14T15:12:18Z",
                "status": "CANCELLED",
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/originalcredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513"
                }]
            }

## Get Original Credit [GET /v1/accounts/{account_id}/originalcredits/{original_credit_id}]
<a name="getoriginalcredit" title="Look Up an Original Credit"></a>

Click on **Get Original Credit** above to see how to look up an Original Credit request using the ID returned in the response to the original request.

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.
    + original_credit_id:`86dcb68d-cbd0-4878-8da7-ffc0e6554513` - This is the Original Credit ID returned in the response.

+ Request Get an Original Credit (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

+ Response 200 (application/json)

    + Body

            {
                "id": "86dcb68d-cbd0-4878-8da7-ffc0e6554513",
                "merchantRefNum": "merchant 07.05.17_16",
                "txnTime": "2017-07-06T19:59:17Z",
                "status": "PENDING",
                "amount": 1000,
                "card": {
                    "type": "VI",
                    "lastDigits": "1111",
                    "cardExpiry": {
                        "month": 2,
                        "year": 2019
                    }
                },
                "profile": {
                    "firstName": "Joe",
                    "lastName": "Smith",
                    "email": "Joe.Smith@canada.com"
                },
                "billingDetails": {
                    "street": "100 Queen Street West",
                    "city": "Toronto",
                    "state": "ON",
                    "country": "CA",
                    "zip": "M5H2N2"
                },
                "customerIp": "204.91.0.12",
                "description": "Winning payment from Loto",
                "currencyCode": "CAD",
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/originalcredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513"
                }]
            
            }

## Get Original Credit Using Merchant Reference Number [GET /v1/accounts/{account_id}/originalcredits?merchantRefNum={merchantRefNum}&limit={limit}&offset={offset}&startDate={startDate}&endDate={endDate}]
<a name="getoriginalcreditmerchantrefnum" title="Look Up an Original Credit Using a Merchant Reference Number"></a>

Click on **Get Original Credit Using Merchant Reference Number** above to see how to look up an Original Credit request using the merchant reference number used in the original request.

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.
    + merchantRefNum:`merchant 07.05.17_16` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request.
    + limit:2 (string, optional) - This is the total number of records to return. Default value is 10. Max value is 50.
    + offset:0 (string, optional) - This is the starting position, where 0 is the first record. Default = 0.
    + startDate:`2017-01-14T15:12:18Z` - This is the start date in UTC. Default = 30 days before the *endDate*.
    + endDate:`2017-04-04T15:12:18Z` - This is the end date in UTC. Default = current date and time.

+ Request Get an Original Credit Using Merchant Reference Number (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

+ Response 200 (application/json)

    + Body

            {
                "originalcredits": [
                {
                "id": "86dcb68d-cbd0-4878-8da7-ffc0e6554513",
                "merchantRefNum": "merchant 07.05.17_16",
                "txnTime": "2017-07-06T19:59:17Z",
                "status": "PENDING",
                "amount": 1000,
                "card": {
                    "type": "VI",
                    "lastDigits": "1111",
                    "cardExpiry": {
                        "month": 2,
                        "year": 2019
                    }
                },
                "profile": {
                    "firstName": "Joe",
                    "lastName": "Smith",
                    "email": "Joe.Smith@canada.com"
                },
                "billingDetails": {
                    "street": "100 Queen Street West",
                    "city": "Toronto",
                    "state": "ON",
                    "country": "CA",
                    "zip": "M5H2N2"
                },
                "customerIp": "204.91.0.12",
                "description": "Winning payment from Loto",
                "currencyCode": "CAD",
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/originalcredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513"
                }]
            
            }
            ],
                "links": [{
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/originalcredits?merchantRefNum=merchant 07.05.17_16&limit=2&offset=2&startDate=2017-01-14T15:12:18Z&endDate=2017-04-04T15:12:18Z"
                    }
                ]
            }

# Standalone Credits [/standalonecredits]
<a name="standalonecredits" title="Standalone Credits"></a>

Standalone Credits allow merchants to issue credits to cardholders without requiring a previous Authorization/Settlement.

**Note:** If your merchant category code (MCC) is listed as able to [process Original Credits](#originalcredits), you must not use Standalone Credits.

By default, Test accounts do not support Standalone Credits; if you wish to use them you should contact [Integration Support](https://developer.paysafe.com/en/resources-and-support/contact-us/). 

## Standalone Credit [POST /v1/accounts/{account_id}/standalonecredits]
<a name="standalonecreditrequest" title="Standalone Credit Request"></a>

Click on **Standalone Credit** above to see two examples of a Standalone Credit request:

* A Standalone Credit request using card information
* A Standalone Credit request using a payment token

In the case of a payment token, you can use either of two payment token types:

* The permanent, reusable payment token that you receive in the response to a Customer Vault [card creation request](https://developer.paysafe.com/en/payments/vault/api/#/reference/0/cards/create-a-card)
* The temporary payment token that you receive in the response to a Customer Vault [mobile single-use token creation request](https://developer.paysafe.com/en/payments/vault/api/#/reference/0/mobile-device-single-use-tokens/create-a-mobile-device-single-use-token) or when using the [Paysafe.js SDK](https://developer.paysafe.com/en/sdks/paysafejs/tokenize/)

You **cannot** use [Apple Pay single-use tokens](https://developer.paysafe.com/en/vault/api/#/reference/single-use-tokens/apple-pay-single-use-tokens/create-an-apple-pay-single-use-token) or [Google Pay single-use tokens](https://developer.paysafe.com/en/vault/api/#/reference/single-use-tokens/google-payment-api-single-use-tokens/create-a-google-payment-api-single-use-token) in Standalone Credit requests.

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.

+ Attributes
    + Include Standalone Credit
    + Include Links Standalone Credit

+ Request Submit a Standalone Credit (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
                "merchantRefNum": "merchant 07.05.17_16",
                "amount": 1000,
                "dupCheck": "true",
                "card": {
                    "cardNum": "4111111111111111",
                    "cardExpiry": {
                        "month": 2,
                        "year": 2019
                    }
                },
                "customerIp": "204.91.0.12",
                "description": "Winning payment from Loto"
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "86dcb68d-cbd0-4878-8da7-ffc0e6554513",
                "merchantRefNum": "merchant 07.05.17_16",
                "txnTime": "2017-07-06T19:59:17Z",
                "status": "PENDING",
                "amount": 1000,
                "card": {
                    "type": "VI",
                    "lastDigits": "1111",
                    "cardExpiry": {
                        "month": 2,
                        "year": 2019
                    }
                },
                "profile": {
                    "firstName": "Joe",
                    "lastName": "Smith",
                    "email": "Joe.Smith@canada.com"
                },
                "billingDetails": {
                    "street": "100 Queen Street West",
                    "city": "Toronto",
                    "state": "ON",
                    "country": "CA",
                    "zip": "M5H2N2"
                },
                "customerIp": "204.91.0.12",
                "description": "Winning payment from Loto",
                "currencyCode": "CAD",
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/standalonecredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513"
                }]
            
            }

+ Request Submit a Standalone Credit Request Using a Payment Token (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY
    
    + Body

            {
                "merchantRefNum": "merchant 07.05.17_16",
                "amount": 1000,
                "dupCheck": "true",
                "card": {
                    "paymentToken": "LTEyMzYzMjQ3ODg"
                },
                "customerIp": "204.91.0.12",
                "description": "Winning payment from Loto"
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "86dcb68d-cbd0-4878-8da7-ffc0e6554513",
                "merchantRefNum": "merchant 07.05.17_16",
                "txnTime": "2017-07-06T19:59:17Z",
                "status": "PENDING",
                "amount": 1000,
                "card": {
                    "type": "VI",
                    "lastDigits": "1111",
                    "cardExpiry": {
                        "month": 2,
                        "year": 2019
                    }
                },
                "profile": {
                    "firstName": "Joe",
                    "lastName": "Smith",
                    "email": "Joe.Smith@canada.com"
                },
                "billingDetails": {
                    "street": "100 Queen Street West",
                    "city": "Toronto",
                    "state": "ON",
                    "country": "CA",
                    "zip": "M5H2N2"
                },
                "customerIp": "204.91.0.12",
                "description": "Winning payment from Loto",
                "currencyCode": "CAD",
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/standalonecredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513"
                }]
            
            }


## Cancel a Standalone Credit [PUT /v1/accounts/{account_id}/standalonecredits/{standalone_credit_id}]
<a name="canceloriginalcredit" title="Cancel an Original Credit"></a>

Click on **Cancel a Standalone Credit** above to see how to submit a Cancel Standalone Credit request.

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.
    + standalone_credit_id:`86dcb68d-cbd0-4878-8da7-ffc0e6554513` (string, required) - This is the ID returned in the response to the Standalone Credit request.

+ Request Cancel a Standalone Credit (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY
    
    + Body

            {
                "status": "CANCELLED"
            }    

+ Response 200 (application/json)

    + Body

            {
                "id": "86dcb68d-cbd0-4878-8da7-ffc0e6554513",
                "txnTime": "2017-02-14T15:12:18Z",
                "status": "CANCELLED",
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/standalonecredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513"
                }]
            }

## Get Standalone Credit [GET /v1/accounts/{account_id}/standaonecredits/{standalone_credit_id}]
<a name="getstandalonecredit" title="Look Up a Standalone Credit"></a>

Click on **Get Standalone Credit** above to see how to look up a Standalone Credit request using the ID returned in the response to the original request.

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.
    + standalone_credit_id:`86dcb68d-cbd0-4878-8da7-ffc0e6554513` - This is the Standalone Credit ID returned in the response.

+ Request Get a Standalone Credit (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

+ Response 200 (application/json)

    + Body

            {
                "id": "86dcb68d-cbd0-4878-8da7-ffc0e6554513",
                "merchantRefNum": "merchant 07.05.17_16",
                "txnTime": "2017-07-06T19:59:17Z",
                "status": "PENDING",
                "amount": 1000,
                "card": {
                    "type": "VI",
                    "lastDigits": "1111",
                    "cardExpiry": {
                        "month": 2,
                        "year": 2019
                    }
                },
                "profile": {
                    "firstName": "Joe",
                    "lastName": "Smith",
                    "email": "Joe.Smith@canada.com"
                },
                "billingDetails": {
                    "street": "100 Queen Street West",
                    "city": "Toronto",
                    "state": "ON",
                    "country": "CA",
                    "zip": "M5H2N2"
                },
                "customerIp": "204.91.0.12",
                "description": "Winning payment from Loto",
                "currencyCode": "CAD",
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/standalonecredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513"
                }]
            
            }

## Get Standalone Credit Using Merchant Reference Number [GET /v1/accounts/{account_id}/standalonecredits?merchantRefNum={merchantRefNum}&limit={limit}&offset={offset}&startDate={startDate}&endDate={endDate}]
<a name="getstandalonecreditmerchantrefnum" title="Look Up a Standalone Credit Using a Merchant Reference Number"></a>

Click on **Get Standalone Credit Using Merchant Reference Number** above to see how to look up a Standalone Credit using the merchant reference number used in the original request.

+ Parameters

    + account_id:123456789 (string, required) - This is the merchant account number.
    + merchantRefNum:`merchant 07.05.17_16` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request.
    + limit:2 (string, optional) - This is the total number of records to return. Default value is 10. Max value is 50.
    + offset:0 (string, optional) - This is the starting position, where 0 is the first record. Default = 0.
    + startDate:`2017-01-14T15:12:18Z` - This is the start date in UTC. Default = 30 days before the *endDate*.
    + endDate:`2017-04-04T15:12:18Z` - This is the end date in UTC. Default = current date and time.

+ Request Get a Standalone Credit Using Merchant Reference Number (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

+ Response 200 (application/json)

    + Body

            {
                "standalonecredits": [
                {
                "id": "86dcb68d-cbd0-4878-8da7-ffc0e6554513",
                "merchantRefNum": "merchant 07.05.17_16",
                "txnTime": "2017-07-06T19:59:17Z",
                "status": "PENDING",
                "amount": 1000,
                "card": {
                    "type": "VI",
                    "lastDigits": "1111",
                    "cardExpiry": {
                        "month": 2,
                        "year": 2019
                    }
                },
                "profile": {
                    "firstName": "Joe",
                    "lastName": "Smith",
                    "email": "Joe.Smith@canada.com"
                },
                "billingDetails": {
                    "street": "100 Queen Street West",
                    "city": "Toronto",
                    "state": "ON",
                    "country": "CA",
                    "zip": "M5H2N2"
                },
                "customerIp": "204.91.0.12",
                "description": "Winning payment from Loto",
                "currencyCode": "CAD",
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/standalonecredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513"
                }]
            
            }
            ],
                "links": [{
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/standalonecredits?merchantRefNum=merchant 07.05.17_16&limit=2&offset=2&startDate=2017-01-14T15:12:18Z&endDate=2017-04-04T15:12:18Z"
                    }
                ]
            }

# Data Structures

## `AccordD`

+ `accordD` (object, optional) - These are parameters for [financing plans](#accorddobject) supported for certain merchant configurations.
    + financingType:DEFERRED_PAYMENT (enum, required) - This is the type of financing offered.
    + plan:112 (string, required) - This is the plan number for this financing transaction.
        _length<=3_
    + gracePeriod:12 (number, optional) - This is the grace period, in months, associated with deferred payment transactions.
        _max=99_
    + term:24 (number, optional) - This is the number of payments, in months, for equal payment transactions.
        _max=99_

## `Acquirer Data`

+ `acquirerData` (object) - This is additional information about your card acquirer, required **only when** you are using Credorax (CRX) as your acquirer for Original Credits. Contact your account manager for more information.

    _Read Only_
    
    + Properties
    - authId:`f06bccd6-de90-4b73-b10f-30266763bc60` (string) - This is the ID returned in the response to a previous successful Authorization or Settlement request.
        _length<=36_
    - code:CRX (enum) - This is the code for your card acquirer.
        _length<=10_

## `Acquirer Response`

+ `acquirerResponse` (object) - This is the [raw response returned by an acquirer](#acquirerresponseobject). It is returned only if your account is configured accordingly.

    _Read Only_
    
    + Properties
        + code:`DJN` (string) - This is the acquirer identification code.
        + responseCode:`556677j88` (string) - This is the raw response returned by the acquirer.
        + avsCode:`M` (string) - This is the raw AVS code returned by the acquirer.
        + balanceResponse:`1200` (string) - This is the balance remaining on a gift card, if a gift card was used in the original transaction.

## `airlineTravelDetails`

+ `airlineTravelDetails` (object) - This is additional information about your airline travel.
    _NOTE:This object is only for Airline Merchants_
    
    + Properties
        + passengerName: `John Doe` (string, required) - Name of the passenger to whom the ticket was issued.
            _min=1 max=20_ 
        + departureDate: `2014-01-26` (string, required) - Date of passenger’s departure. Date format = YYYY-MM-DD, ISO 8601 expected.
            _UTC Date Format_
        + origin: `YUL` (string,required) - Departure Airport Code: IATA Airport Code.
            _min=3 max=3_
        + computerizedReservationSystem: `STRT` (enum) - Indicates the computerized reservation system used to make the reservation and purchase the ticket. For tickets purchased in Germany, this field should one of these codes:
            _Conditional: Required only if the ticket is purchased in Germany_
            + Members
                + STRT - Start
                + PARS - TWA
                + DATS - Delta
                + SABR - Sabre
                + DALA - Covia-Apollo
                + BLAN - Dr. Blank
                + DERD - DER
                + TUID - TUI
        + `ticket` (object) - Information about the Airline Ticket Number and if the ticket is restricted.
            _Required_
            + Properties
                + ticketNumber: `` (string, required) - Airline Ticket Number.
                    _min=1 max=20_ 
                + isRestrictedTicket: `true` (boolean, optional) - ndicates whether this ticket is non-refundable. This entry should be supplied on CPS/Passenger Transport 1 or 2 transactions if the ticket was purchased as a non-refundable ticket. Valid values are: false - No restriction : default, true - Restricted : non-refundable ticket.
        + customerReferenceNumber: ``  (string, optional) - Contains the code that the cardholder supplied to the card acceptor.
            _min=1 max=20_ 
        + `travelAgency` (object) - Information about the travel agency if the ticket was issued by a travel agency.
            _Optional_
            + Properties
                + code: `` (string, optional) - Code identifying travel agency if the ticket was issued by a travel agency.
                    _min=1 max=8_ 
                + name: `` (string, optional) - Information about the travel agency if the ticket was issued by a travel agency.
                    _min=1 max=25_ 
        + `tripLegs` (object) - A grouping of up to four trip legs. Each leg provides detailed itinerary data.
            _Optional_
            + Properties
                + `leg1, leg2, leg3, leg4` (object) - Description of the various leg of trip.
                    _Optional_
                    + Properties
                        + `flight` (object) - Operating Carrier Code and the Number of the airline flight to be taken on Leg of the trip (excluding the carrier code).
                            _Optional_
                            + Properties
                                + carrierCode: `` (string, optional) - Operating Carrier Code; the standard abbreviation code indicating name of the operating carrier like United Airlines, Jet Blue, etc.
                                    _min=2 max=2_ 
                                + flightNumber: `` (string, optional) - Number of the airline flight to be taken on Leg of the trip excluding the carrier code.
                                      _min=2 max=5_ 
                        + serviceClass: `` (string, optional) - Indicates service class (first class, business class, etc.). Example values (not limited to):F - first class, J - business class, W - premium economy class, Y - economy class, 
                            _min=1 max=8_ 
                        + isStopOverAllowed: `true` (boolean, optional) - Indicates whether a stopover is allowed on this ticket. Valid values are: false - not allowed, true - allowed
                        + destination: `YUL` (string, optional) - Destination Airport Code : IATA Airport Code.
                            _min=3 max=3_ 
                        + fareBasis: `` (string,optional) - Contains a Fare Basis Code for Leg that carriers assign to a particular ticket type, such as business class or discounted/nonrefundable.
                            _min=1 max=6_ 
                        + departureDate: `2014-01-26` (string, required) -Date of passenger’s departure for this leg. Date format = YYYY-MM-DD, ISO 8601 expected. UTC date format.

## `Authentication`

+ `authentication` (object, optional) - These are [3D Secure](#authenticationobject) details.
    + eci:5 (number, required) - This is the Electronic Commerce Indicator code, which gets returned by the card issuer indicating whether the cardholder was successfully authenticated.
        _length<=2_
    + cavv:AAABCIEjYgAAAAAAlCNiENiWiV+= (string, required) - This is the Cardholder Authentication Verification Value, which gets returned by the card issuer, indicating that the transaction has been authenticated.
        _length<=80_
    + xid:OU9rcTRCY1VJTFlDWTFESXFtTHU= (string, optional) - This is the transaction identifier returned by the card issuer. **Note:** This exists only for 3DS 1.0.2.
        _length<=40_
    + threeDEnrollment:Y (enum, optional) - This indicates whether or not the cardholder is enrolled in 3D Secure. **Note:** This exists only for 3DS 1.0.2.
    + threeDResult:Y (enum, optional) - This indicates the outcome of the authentication.
    + signatureStatus:Y (enum, optional) - This is the 3D Secure signature verification result value. **Note:** This exists only for 3DS 1.0.2.
    + directoryServerTransactionId:`123e4567-e89b-12d3-a456-4266554456745` (string, optional) - This is the unique directory server transaction ID required for Mastercard. **Note:** This is field is required when the card brand is Mastercard. This exists only for 3D Secure 2.
        _length<=36_
    + threeDSecureVersion:`2.1.0` (string, required) - This is the 3D secure protocol version. **Note:** If no version is specified in the request, value defaults to 1.0.2. and is echoed in the response.
        _min=5_ _max=8_
    

## Authorization

+ `id`: `25f6dadf-176a-415f-95c9-6ff39ff697ba` (string) - This is the ID returned in the response. This ID can be used for future associated requests, e,g., Settlements.

    _Read Only_, _length<=36_
    
+ `entryMode`: (enum) - This is how the transaction has been initiated and will affect the way it will be processed. Possible values are MOTO - Mail Order/Telephone Order. **Note:** Include this element only when instructed to do so by Paysafe.

+ Include Card Auth

+ `merchantRefNum`: `P1234` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request.

    _length<=255_

+ `amount`: `100` (number, required) - This is the amount of the request, in minor units.

    _max=99999999999_

+ Include Authentication
+ Include Profile
+ Include Billing Details
+ Include Shipping Details
+ `recurring`:`INITIAL` (enum, optional) - This indicates whether this is an initial or repeat transaction for a customer for whom you will be processing recurring transactions. You cannot include both the *recurring* parameter and the *storedCredential* object in the same authorization request. Paysafe recommends using the *storedCredential* object.

    + Members
        + `INITIAL`
        + `RECURRING`

+ Include Stored Credential
+ `customerIp`:`204.91.0.12` (string, optional) - This is the customer's IP address.

    _length<=39_ 


+ `dupCheck`:`false` (boolean, optional) - This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request within the past 90 days.

    + Default: true

+ `keywords`:(array, optional) - `Repeat Customer` This value can be any text the merchant wants to use. You can search on keywords in the Paysafe Merchant Back Office reporting tools.
    _length<=255_

    - Repeat Customer
    - Profile Stored

+ Include Merchant Descriptor
+ Include AccordD
+ `description`:`Video Purchase` (string, optional) - This is a description of the transaction, provided by the merchant.

    _length<=255_

+ Include Recipient
+ Include Level2Level3

+ `settleWithAuth`:`true` (boolean, optional) - This indicates whether the request is an Authorization only (no Settlement), or a Purchase (Authorization and Settlement). Default = *false*

    + Default: false

+ `availableToSettle`: `1000` (number) - This is the amount of of the Authorization remaining to settle, in minor units.

    _Read Only_, _max=99999999999_

+ `authCode`: `123456789011` (string) - This is the Authorization code assigned by the issuing bank and returned in the response.

    _Read Only_, _length<=50_

+ `txnTime`: `2017-12-11T16:33:49Z` (string) - This is the date and time the transaction was processed.

    _Read Only_

+ `currencyCode`:`USD` (string) - This is the currency of the merchant account, e.g., USD or CAD, returned in the request response.

    _Read Only_, _length=3_

+ `avsResponse`:`MATCH` (enum) - This is the [AVS response from the card issuer](#authsobject).

    _Read Only_

+ `cvvVerification`:`MATCH` (enum) - This is the [response to the cvv submitted](#authsobject) with the transaction request.

    _Read Only_

+ `status`:`RECEIVED` (enum) - This is the status of the request.

    _Read Only_
    
    + Members
        + `RECEIVED`
        + `COMPLETED`
        + `HELD`
        + `FAILED`
        + `CANCELLED`

+ `riskReasonCode`: `5500` (array) - An array of integers is returned, displaying the detailed Risk reason codes if your transaction was declined. It is returned only if your account is configured accordingly.

    _Read Only_

+ Include Acquirer Response
+ Include paymentFacilitator
+ Include Splitpay
+ Include Error Response

## `Billing Details`

+ `billingDetails` (object, optional) -This is the billing address of the customer.
    + street:100 Queen Street West (string, optional)
        _length<=50_
    + street2 (string, optional)
        _length<=50_
    + city:Toronto (string, optional)
        _length<=40_
    + state:ON (string, optional)
        _length<=40_
    + country:CA (string, optional)
        _length=2_
    + zip:M5H 2N2 (string, optional)
        _length<=10_
    + phone:555-9999 (string, optional)
        _length<=40_

## `Card Auth`

+ One of

    + card (object, required) - This is the payment token that represents the [card](#cardobject) used for the request. Only one **card** object can be included in the request.

        + Properties

            + paymentToken:`LTEyMzYzMjQ3ODg` (string, required) - This is the payment token representing the card.
                _length<=80_
            + cvv:`123` (string, optional) - This is the 3- or 4-digit security code that appears on the card following the card number.
                _length=3-4_

    + card (object, required) - These are the details of the [card](#cardobject) used for the request. Only one **card** object can be included in the request.

        + Properties

            + cardNum:`4111111111111111` (string, required) - This is the card number used for the request.
                _length=8-20_
                
            + cardExpiry (object, required) - This is the card's [expiry date](#cardexpiryobject).
                + month:12 (number, required) - This is the card expiry month.
                    _length=2_
                + year:2020 (number, required) - This is the card expiry year.
                    _length=4_
            + cvv:`123` (string, optional) - This is the 3- or 4-digit security code that appears on the card following the card number.
                _length=3-4_
            + track1 (string, optional) - This is Track 1 information read from the card's magnetic stripe.
            + track2 (string, optional) - This is Track 2 information read from the card's magnetic stripe.

## `Card`

+ One of

    + card (object, required) - This is the payment token that represents the [card](#cardobject) used for the request. Only one **card** object can be included in the request.
    
        + Properties

            + paymentToken:`LTEyMzYzMjQ3ODg` (string, required) - This is the payment token representing the card.
                _length<=80_

    + card (object, required) - These are the details of the [card](#cardobject) used for the request. Only one **card** object can be included in the request.
    
        + Properties

            + cardNum:`4111111111111111` (string, required) - This is the card number used for the request.
                _length=8-20_
               + cardExpiry (object, required) - This is the card's [expiry date](#cardexpiryobject).
                + month:12 (number, required) - This is the card expiry month.
                    _length=2_
                + year:2020 (number, required) - This is the card expiry year.
                    _length=4_
            + cvv:`123` (string, optional) - This is the 3- or 4-digit security code that appears on the card following the card number.
                _length=3-4_
            + track1 (string, optional) - This is Track 1 information read from the card's magnetic stripe.
            + track2 (string, optional) - This is Track 2 information read from the card's magnetic stripe.

## `Date of Birth`
+ dateOfBirth (object, required) - This is the recipient's date of birth. 

    + Properties
        + day:29 (number, required) - This is the day of birth.
            _length=2_
        + month:12 (number, required) - This is the month of birth.
            _length=2_
        + year:2020 (number, required) - This is the year of birth.
            _length=4_

## Error Response
+ error (object)

    _Read Only_
    
    + Properties
        + code:`1000` (string) - This is the error code.
        + message:`An internal error occurred.` (string) - This is a description of the error.
        + details: (string) - These are details of any parameter value errors.
        + links: (array) - This is one or more rel/href pairs, where rel is "errorinfo", and href is the Developer Center URL containing a description of the error.

## Level2Level3

+ `level2Level3` (object, optional) - This allows merchants who are enabled to provide additional [L2/L3 transaction data](#level2level3object).
    + exemptLocalTax:true (boolean, optional) - This indicates whether or not local tax is exempted for the request. 
    + localTaxAmount:1500 (number, optional) - This is the local sales tax applied to the purchase.
        _length<=99999999999_
    + nationalTaxAmount:0 (number, optional) - This is the national tax included in the transaction amount.
        _length<=99999999999_
    + freightAmount:0 (number, optional) - This is the freight or shipping portion of the total transaction amount.
        _length<=99999999999_
    + dutyAmount:0 (number, optional) - This is the duty associated with the import of the purchased goods.
        _length<=99999999999_
    + destinationZip:90210 (string, optional) - This is the postal/zip code of the address to which the purchased goods will be delivered.
        _length<=10_
    + destinationCountry:US (string, optional) - This is the country to which the goods are being shipped.
        _length=2_
    + shipFromZip:90211 (string, optional) - This is the postal/zip code of the address from which the purchased goods are being shipped.
        _length<=10_
    + Include Line Items
    
## Line Items
+ `lineItems` (object, optional) - This is more [detailed information](#lineitemsobject) about the items that are being purchased.
    + description:Disney Cruise Line (string, optional) - This is a description of the item(s) being purchased.
        _length<=50_
    + productCode:DCL (string, optional) - This is a merchant-defined description code of the item being purchased.
        _length<=12_
    + quantity:4 (number, optional) - This is the quantity of the item.
        _length<=99999999999_, _max 4 decimals_
    + unitAmount:120000 (number, optional) - This is the unit price of the item being purchased, in minor units. The currency will be based on the account setting.
        _length<=99999999999_
    + taxRate:5 (number, optional) - This is the tax rate used to calculate the tax amount.
        _length<=100_, _max 2 decimals_
    + taxAmount:24000 (number, optional) - This is the amount of any value-added taxes that can be associated with the purchased item, in minor units.
        _length<=99999999999_
    + totalAmount:504000 (number, optional) - This is the total amount of the line item, typically calculated as price multiplied by quantity, in minor units.
        _length<=99999999999_

## `link`
+ rel: self 
+ href: `https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/auths/e50e19a6-8edd-44ec-abc4-18d0a97d51d8`

## `links`
+ links (array[link]) - This is an array of links related to the resource.  

    Typically you will have reference to any parent resources, and a reference to the child resource (if applicable).
    You may also see links for any call to action flows.
    
    _Read Only_

## `link auth void`
+ rel:`self` (string) -  This is the link type that allows different endpoints to be targeted depending on the end state of the transaction.
+ href: `https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/voidauths/e50e19a6-8edd-44ec-abc4-18d0a97d51d9`

## `Links Auth Void`
+ links (array[link auth void]) - This is an array of links related to the resource.  

    Typically you will have reference to any parent resources, and a reference to the child resource (if applicable).
    You may also see links for any call to action flows.
    
    _Read Only_

## `link original credit`
+ rel:`self` (string) -  This is the link type that allows different endpoints to be targeted depending on the end state of the transaction.
+ href: `https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/originalcredits/e50e19a6-8edd-44ec-abc4-18d0a97d51d9`

## `Links Original Credit`
+ links (array[link original credit]) - This is an array of links related to the resource.  

    Typically you will have reference to any parent resources, and a reference to the child resource (if applicable).
    You may also see links for any call to action flows.
    
    _Read Only_

## `link refund`
+ rel:`self` (string) -  This is the link type that allows different endpoints to be targeted depending on the end state of the transaction.
+ href: `https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/refunds/e50e19a6-8edd-44ec-abc4-18d0a97d51d8`

## `Links Refund`
+ links (array[link refund]) - This is an array of links related to the resource.  

    Typically you will have reference to any parent resources, and a reference to the child resource (if applicable).
    You may also see links for any call to action flows.
    
    _Read Only_

## `link settlement`
+ rel:`self` (string) -  This is the link type that allows different endpoints to be targeted depending on the end state of the transaction.
+ href: `https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/settlements/e50e19a6-8edd-44ec-abc4-18d0a97d51d8`

## `Links Settlement`
+ links (array[link settlement]) - This is an array of links related to the resource.  

    Typically you will have reference to any parent resources, and a reference to the child resource (if applicable).
    You may also see links for any call to action flows.
    
    _Read Only_

## `link standalone credit`
+ rel:`self` (string) -  This is the link type that allows different endpoints to be targeted depending on the end state of the transaction.
+ href: `https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/standalonecredits/e50e19a6-8edd-44ec-abc4-18d0a97d51d9`

## `Links Standalone Credit`
+ links (array[link standalone credit]) - This is an array of links related to the resource.  

    Typically you will have reference to any parent resources, and a reference to the child resource (if applicable).
    You may also see links for any call to action flows.
    
    _Read Only_

## `link verification`
+ rel:`self` (string) -  This is the link type that allows different endpoints to be targeted depending on the end state of the transaction.
+ href: `https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/verifications/e50e19a6-8edd-44ec-abc4-18d0a97d51d8`

## `Links Verification`
+ links (array[link verification]) - This is an array of links related to the resource.  

    Typically you will have reference to any parent resources, and a reference to the child resource (if applicable).
    You may also see links for any call to action flows.
    
    _Read Only_

## `Merchant Descriptor`

+ `merchantDescriptor` (object, optional) - This is the merchant descriptor that will be displayed on the customer's card statement.
    + `dynamicDescriptor`:`Online Store` (string, required) - This is a merchant descriptor that will be displayed on a customer’s card statement.
        _length<=20_
    + `phone`:`888-9999` (string, optional) - This is the merchant’s phone number, which will be appended to the merchant descriptor on a customer’s card statement.
        _length<=13_

## `Original Credit`

+ `id`: `25f6dadf-176a-415f-95c9-6ff39ff697ba` (string) - This is the ID returned in the response. This ID can be used for future associated requests, e,g., lookups.

    _Read Only_, _length<=36_

+ `amount`: `100` (number, required) - This is the amount of the request, in minor units.

    _max=99999999999_

+ Include Card

+ `merchantRefNum`: `P1234` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request.

    _length<=255_

+ Include Profile
+ Include Billing Details
+ `customerIp`:`204.91.0.12` (string, optional) - This is the customer's IP address.

    _length<=39_ 

+ `dupCheck`:`false` (boolean, optional) - This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request within the past 90 days.

    + Default: true

+ `description`:`Purchase Credit` (string, optional) - This is a description of the transaction, provided by the merchant.

    _length<=255_

+ `txnTime`: `2017-12-11T16:33:49Z` (string) - This is the date and time the transaction was processed.

    _Read Only_

+ `authCode`: `12345678901` (string) - This is the Authorization code assigned by the issuing bank and returned in the response.

    _Read Only_, _length<=50_

+ `currencyCode`:`USD` (string) - This is the currency of the merchant account, e.g., USD or CAD, returned in the request response.

    _Read Only_, _length=3_

+ `status`:`RECEIVED` (enum) - This is the status of the request.

    _Read Only_
    
    + Members
        + `RECEIVED`
        + `COMPLETED`
        + `PENDING`
        + `FAILED`
        + `CANCELLED`

+ Include Acquirer Response
+ Include Acquirer Data
+ Include Error Response
+ `riskReasonCode`: `5500` (array) - An array of integers is returned, displaying the detailed Risk reason codes if your transaction was declined. It is returned only if your account is configured accordingly.

    _Read Only_

## `Profile`

+ `profile` (object, optional) -  These are some details about the customer.
    + firstName:John (string, optional)
        _length<=80_
    + lastName:Smith (string, optional)
        _length<=80_
    + email:`jsmith@email.com` (string, optional)
        _length<=255_

## paymentFacilitator
+ `paymentFacilitator` (object, optional) - Details of the payment facilitator transactions.
    + paymentFacilitatorName:`PRE` (string, optional) -This is the payment facilitator name. Normally this is the name that would show up in the transaction descriptor before the '*'.
        _min=1 max=50_
    + subMerchantId:`rSubMerId` (string, optional) - This is an ID that the schemes can use to identify the sub merchant of the payment facilitator. Possible values could be our FMA or some other identifier that the merchant wishes to identify a sub merchant as. The default should be our FMA number.
        _min=1 max=50_
    + subMerchantName:`RsubMerName` (string, optional) - The name of the sub merchant. Potentially can be used as part of the transaction descriptor. Each acquirer integration could be different please see individual implementation for actual behavior.
        _min=1 max=50_

## purchaseReturnAuthorization
+ `purchaseReturnAuthorization` (object) - This is the Purchase Return Authorization that was performed for the refund. Note: Purchase Return Authorization is performed and returned in the response only if acquirer/processor supports it.
    + id:`25f6dadf-176a-415f-95c9-6ff39ff697ba` (string) -This is the unique ID returned in the response. This ID can be used for future associated requests.
        _Read Only_
    + merchantRefNum:`P1234` (string) - This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.
         _Read Only_
    + txnTime:`2014-01-26T10:32:28Z` (string) - This is the date and time the request was processed.
        _UTC formatted date_
    + authCode:`123456789011` (string) - This is the Authorization code assigned by the issuing bank and returned in the response.
         _Read Only_
    + amount:`100` (number) - This is the amount of the request, in minor units.
        _UTC formatted date, Read Only__
    + currencyCode:`USD` (string) - This is the currency of the merchant account, e.g., USD or CAD, returned in the request response. 
         _Read Only_

## Recipient

+ `recipient` (object, optional) - This allows [additional data](#recipientobject) to be included with a request. Include this object **only if** your Merchant Category Code is **6012** and your registered trading address is in the United Kingdom. **Note:** If there is already recipient data associated with a consumer profile and you are using the payment token from that profile for an Authorization, then if you include recipient data in the Authorization itself, that data will override the recipient data in the profile.
    + Include Date of Birth
    + zip:M5M 5M5 (string, optional) - This is the recipient's postcode.
        _length<=10_
    + lastName:Smith (string, optional) - This is the recipient's last name.
        _length<=255_
    + accountNumber:ABC1234567890 (string, optional) - This is the recipient's account number, e.g., a loan agreement number or customer ID.
        _length<=25_

## `Refund`
+ `id`: `25f6dadf-176a-415f-95c9-6ff39ff697ba` (string) - This is the ID returned in the response. This ID can be used for future associated requests, e.g., lookups.

    _Read Only_, _length<=36_
+ `merchantRefNum`: `merchantABC-444-refund` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.

    _length<=255_

+ `amount`:`50` (number, optional) - This is the amount of the request, in minor units. If this value is not provided, the full remaining amount on the Settlement will be refunded. 

    _max=99999999999_
+ `dupCheck`:`true` (boolean, optional) - This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request within the past 90 days.

    + Default: true

+ `txnTime`: `2017-12-11T16:33:49Z` (string) - This is the date and time the transaction was processed.

    _Read Only_
    
+ `status`:`RECEIVED` (enum) - This is the [status of the request](#refundsobject).

    _Read Only_
    
    + Members
        + `RECEIVED`
        + `PENDING`
        + `COMPLETED`
        + `FAILED`
        + `CANCELLED`

+ Include Acquirer Response
+ Include Splitpay
+ Include Error Response
+ `riskReasonCode`: `5500` (array) - An array of integers is returned, displaying the detailed Risk reason codes if your transaction was declined. It is returned only if your account is configured accordingly.

    _Read Only_
+ Include purchaseReturnAuthorization

## Settlement
+ `id`: `25f6dadf-176a-415f-95c9-6ff39ff697ba` (string) - This is the ID returned in the response. This ID can be used for future associated requests, e,g., Refunds.

    _Read Only_, _length<=36_
+ `merchantRefNum`: `P1234` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.

    _length<=255_

+ amount:`50` (number, optional) - This is the amount of the request, in minor units. If this value is not provided, the full remaining amount on the Authorization will be settled. 

    _max=99999999999_
+ dupCheck:`true` (boolean, optional) - This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request within the past 90 days.

    + Default: true
+ availableToRefund:`25` (number) - This is the amount of of the Authorization remaining to Refund, in minor units.

    _Read Only_, _max=99999999999_
+ `txnTime`: `2017-12-11T16:33:49Z` (string) - This is the date and time the transaction was processed.

    _Read Only_
    
+ `status`:`RECEIVED` (enum) - This is the [status of the request](#settlementsobject).

    _Read Only_
    
    + Members
        + `RECEIVED`
        + `PENDING`
        + `PROCESSING`
        + `COMPLETED`
        + `FAILED`
        + `CANCELLED`

+ Include Error Response

## `Shipping Details` (object, optional) -This is the shipping address of the customer.

+ `shippingDetails` (object, optional) -This is the shipping address of the customer.
    + carrier:CAD (enum, optional) - This is the shipment carrier.
    + shipMethod:T (enum, optional) - This is the shipment method.
    + recipientName:Jane Smith (string, optional) - This is the name of the person receiving the goods.
        _length<=255_
    + street:102 Queen Street West (string, optional) - This is the first line of the street address in the shipping address.
        _length<=50_
    + city:Toronto (string, optional) - This is the city in the shipping address.
        _length<=40_
    + state:ON (string, optional) - This is the state or province in the shipping address.
        _length<=40_
    + country:CA (string, optional) - This is the country in the shipping address.
        _length<=2_
    + zip:M5H 2N2 (string, optional) - This is the postal/zip code in the shipping address.
        _length<=10_

## Splitpay
+ splitpay (array, optional) - For Splitpay transactions only, an array containing the linked accounts and the amount shared with each. You must include either *amount* or *percent*. However, you cannot include both values.
    + (object)
        + Properties
            + linkedAccount:`123124124` (string, required) - This is the ID of the linked account. This account must already be linked to the merchant account.
            + One of
                + amount:`505` (number, optional) - This is the amount to transfer to the linked account in minor currency units.
                + percent:`5` (number, optional) - This is the percentage of the total transaction amount to transfer to that account.

## `Standalone Credit`

+ `id`: `25f6dadf-176a-415f-95c9-6ff39ff697ba` (string) - This is the ID returned in the response. This ID can be used for future associated requests, e,g., lookups.

    _Read Only_, _length<=36_

+ `amount`: `100` (number, required) - This is the amount of the request, in minor units.

    _max=99999999999_

+ Include Card

+ `merchantRefNum`: `P1234` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request.

    _length<=255_

+ Include Profile
+ Include Billing Details
+ `customerIp`:`204.91.0.12` (string, optional) - This is the customer's IP address.

    _length<=39_ 

+ `dupCheck`:`false` (boolean, optional) - This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request within the past 90 days.

    + Default: true

+ `description`:`Purchase Credit` (string, optional) - This is a description of the transaction, provided by the merchant.

    _length<=255_

+ `txnTime`: `2017-12-11T16:33:49Z` (string) - This is the date and time the transaction was processed.

    _Read Only_

+ `authCode`: `12345678901` (string) - This is the Authorization code assigned by the issuing bank and returned in the response.

    _Read Only_, _length<=50_

+ `currencyCode`:`USD` (string) - This is the currency of the merchant account, e.g., USD or CAD, returned in the request response.

    _Read Only_, _length=3_

+ `status`:`RECEIVED` (enum) - This is the status of the request.

    _Read Only_
    
    + Members
        + `RECEIVED`
        + `COMPLETED`
        + `PENDING`
        + `FAILED`
        + `CANCELLED`

+ Include Acquirer Response
+ Include Error Response
+ `riskReasonCode`: `5500` (array) - An array of integers is returned, displaying the detailed Risk reason codes if your transaction was declined. It is returned only if your account is configured accordingly.

    _Read Only_

## `Stored Credential`
+ storedCredential (object) - This object is used to identify authorization requests that use stored credentials for a consumer's authorization request, in order to improve authorization rates and reduce fraud. You cannot include both the *storedCredential* object and the *recurring* parameter in the same authorization request. Paysafe recommends using the *storedCredential* object. Please consult the [storedCredential object for full details](#storedcredentialobject).

    + Properties
        + type:`ADHOC` (enum) - This specifies the type of request being made. 
            - ADHOC - Ad hoc consumer-initiated request
            - TOPUP - Unscheduled merchant-iniitated request when a consumer balance is below a set limit
            - RECURRING - Scheduled, merchant-initiated recurring request
            
            + Default: ADHOC
        + occurrence:`SUBSEQUENT` (enum) - This specifies whether the stored credential request is initial or recurring. 
            - INITIAL - Used when this is the first time the consumer uses this credit card
            - SUBSEQUENT - Used when the consumer uses this credit card for subsquent requests
            
            + Default: INITIAL

## Verification

+ `id`: `25f6dadf-176a-415f-95c9-6ff39ff697ba` (string) - This is the ID returned in the response. This ID can be used for future associated requests, e,g., lookups.

    _Read Only_, _length<=36_

+ Include Card

+ `merchantRefNum`: `P1234` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request.

    _length<=255_

+ Include Profile
+ Include Billing Details
+ `customerIp`:`204.91.0.12` (string, optional) - This is the customer's IP address.

    _length<=39_ 

+ `dupCheck`:`false` (boolean, optional) - This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request within the past 90 days.

    + Default: true

+ `description`:`Video Purchase` (string, optional) - This is a description of the transaction, provided by the merchant.

    _length<=255_

+ `txnTime`: `2017-12-11T16:33:49Z` (string) - This is the date and time the transaction was processed.

    _Read Only_

+ `authCode`: `12345678901` (string) - This is the Authorization code assigned by the issuing bank and returned in the response.

    _Read Only_, _length<=50_

+ `currencyCode`:`USD` (string) - This is the currency of the merchant account, e.g., USD or CAD, returned in the request response.

    _Read Only_, _length=3_

+ `avsResponse`:`MATCH` (enum) - This is the [AVS response from the card issuer](#authsobject).

    _Read Only_

+ `cvvVerification`:`MATCH` (enum) - This is the [response to the cvv submitted](#authsobject) with the transaction request.

    _Read Only_

+ `status`:`RECEIVED` (enum) - This is the status of the request.

    _Read Only_
    
    + Members
        + `RECEIVED`
        + `COMPLETED`
        + `FAILED`

+ Include Acquirer Response
+ Include Stored Credential
+ Include Error Response
+ `riskReasonCode`: `5500` (array) - An array of integers is returned, displaying the detailed Risk reason codes if your transaction was declined. It is returned only if your account is configured accordingly.

    _Read Only_

## Void Authorization

+ `id`: `25f6dadf-176a-415f-95c9-6ff39ff697ba` (string) - This is the ID returned in the response. This ID can be used for future associated requests, e,g., lookups.

    _Read Only_, length<=36

+ `merchantRefNum`: `P1234` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request.

    _length<=255_

+ `amount`: `100` (number, required) - This is the amount of the request, in minor units.

    _max=99999999999_

+ `dupCheck`:`false` (boolean, optional) - This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request within the past 90 days.

    + Default: true

+ `txnTime`: `2017-12-11T16:33:49Z` (string) - This is the date and time the transaction was processed.

    _Read Only_

+ `status`:`RECEIVED` (enum) - This is the status of the request.

    _Read Only_
    
    + Members
        + `RECEIVED`
        + `COMPLETED`
        + `FAILED`

+ `riskReasonCode`: `5500` (array) - An array of integers is returned, displaying the detailed Risk reason codes if your transaction was declined. It is returned only if your account is configured accordingly.

    _Read Only_

+ Include Acquirer Response
+ Include Error Response